sil_stage canonical

import Builtin
import Swift
import SwiftShims

@_hasStorage @_hasInitialValue let operand1: Int { get }

@_hasStorage @_hasInitialValue let operand2: Int { get }

@_hasStorage @_hasInitialValue let op: String { get }

// operand1
sil_global hidden [let] @$s4main8operand1Sivp : $Int

// operand2
sil_global hidden [let] @$s4main8operand2Sivp : $Int

// op
sil_global hidden [let] @$s4main2opSSvp : $String

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = metatype $@thin Int.Type
  %3 = metatype $@thin CommandLine.Type           // user: %5
  // function_ref static CommandLine.arguments.getter
  %4 = function_ref @$ss11CommandLineO9argumentsSaySSGvgZ : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // users: %7, %8
  // function_ref specialized Array.count.getter
  %6 = function_ref @$sSa5countSivgSS_Tg5 : $@convention(method) (@guaranteed Array<String>) -> Int // user: %7
  %7 = apply %6(%5) : $@convention(method) (@guaranteed Array<String>) -> Int // user: %9
  release_value %5 : $Array<String>               // id: %8
  %9 = struct_extract %7 : $Int, #Int._value      // user: %11
  %10 = integer_literal $Builtin.Int64, 3         // user: %11
  %11 = builtin "cmp_eq_Int64"(%9 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1 // user: %13
  %12 = integer_literal $Builtin.Int1, -1         // user: %13
  %13 = builtin "xor_Int1"(%11 : $Builtin.Int1, %12 : $Builtin.Int1) : $Builtin.Int1 // user: %14
  cond_br %13, bb1, bb2                           // id: %14

bb1:                                              // Preds: bb0
  %15 = integer_literal $Builtin.Word, 1          // user: %17
  // function_ref specialized _allocateUninitializedArray<A>(_:)
  %16 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlFyp_Tg5 : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // user: %17
  %17 = apply %16(%15) : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // users: %18, %19
  %18 = tuple_extract %17 : $(Array<Any>, Builtin.RawPointer), 0 // user: %30
  %19 = tuple_extract %17 : $(Array<Any>, Builtin.RawPointer), 1 // user: %20
  %20 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Any // user: %27
  %21 = string_literal utf8 "Usage: $ main <int> <op> <int>" // user: %26
  %22 = integer_literal $Builtin.Word, 30         // user: %26
  %23 = integer_literal $Builtin.Int1, -1         // user: %26
  %24 = metatype $@thin String.Type               // user: %26
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %25 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %26 = apply %25(%21, %22, %23, %24) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %27 = init_existential_addr %20 : $*Any, $String // user: %28
  store %26 to %27 : $*String                     // id: %28
  // function_ref _finalizeUninitializedArray<A>(_:)
  %29 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // user: %30
  %30 = apply %29<Any>(%18) : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // users: %39, %36
  // function_ref default argument 1 of print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %32
  %32 = apply %31() : $@convention(thin) () -> @owned String // users: %38, %36
  // function_ref default argument 2 of print(_:separator:terminator:)
  %33 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %34
  %34 = apply %33() : $@convention(thin) () -> @owned String // users: %37, %36
  // function_ref print(_:separator:terminator:)
  %35 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %36
  %36 = apply %35(%30, %32, %34) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %34 : $String                     // id: %37
  release_value %32 : $String                     // id: %38
  release_value %30 : $Array<Any>                 // id: %39
  %40 = integer_literal $Builtin.Word, 1          // user: %42
  // function_ref specialized _allocateUninitializedArray<A>(_:)
  %41 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlFyp_Tg5 : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // user: %42
  %42 = apply %41(%40) : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // users: %43, %44
  %43 = tuple_extract %42 : $(Array<Any>, Builtin.RawPointer), 0 // user: %55
  %44 = tuple_extract %42 : $(Array<Any>, Builtin.RawPointer), 1 // user: %45
  %45 = pointer_to_address %44 : $Builtin.RawPointer to [strict] $*Any // user: %52
  %46 = string_literal utf8 "Ignore all further results." // user: %51
  %47 = integer_literal $Builtin.Word, 27         // user: %51
  %48 = integer_literal $Builtin.Int1, -1         // user: %51
  %49 = metatype $@thin String.Type               // user: %51
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %50 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %51
  %51 = apply %50(%46, %47, %48, %49) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %53
  %52 = init_existential_addr %45 : $*Any, $String // user: %53
  store %51 to %52 : $*String                     // id: %53
  // function_ref _finalizeUninitializedArray<A>(_:)
  %54 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // user: %55
  %55 = apply %54<Any>(%43) : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // users: %64, %61
  // function_ref default argument 1 of print(_:separator:terminator:)
  %56 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %57
  %57 = apply %56() : $@convention(thin) () -> @owned String // users: %63, %61
  // function_ref default argument 2 of print(_:separator:terminator:)
  %58 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %59
  %59 = apply %58() : $@convention(thin) () -> @owned String // users: %62, %61
  // function_ref print(_:separator:terminator:)
  %60 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %61
  %61 = apply %60(%55, %57, %59) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %59 : $String                     // id: %62
  release_value %57 : $String                     // id: %63
  release_value %55 : $Array<Any>                 // id: %64
  br bb3                                          // id: %65

bb2:                                              // Preds: bb0
  br bb3                                          // id: %66

bb3:                                              // Preds: bb1 bb2
  alloc_global @$s4main8operand1Sivp              // id: %67
  %68 = global_addr @$s4main8operand1Sivp : $*Int // users: %392, %309, %258, %207, %116
  %69 = alloc_stack $Optional<Int>                // users: %86, %117, %83
  %70 = metatype $@thin Int.Type
  %71 = metatype $@thick Int.Type                 // user: %83
  %72 = metatype $@thin CommandLine.Type          // user: %76
  %73 = integer_literal $Builtin.Int64, 0         // user: %74
  %74 = struct $Int (%73 : $Builtin.Int64)        // user: %79
  // function_ref static CommandLine.arguments.getter
  %75 = function_ref @$ss11CommandLineO9argumentsSaySSGvgZ : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // user: %76
  %76 = apply %75(%72) : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // users: %79, %85
  %77 = alloc_stack $String                       // users: %80, %81, %84
  // function_ref specialized Array.subscript.getter
  %78 = function_ref @$sSayxSicigSS_Tg5 : $@convention(method) (Int, @guaranteed Array<String>) -> @owned String // user: %79
  %79 = apply %78(%74, %76) : $@convention(method) (Int, @guaranteed Array<String>) -> @owned String // user: %80
  store %79 to %77 : $*String                     // id: %80
  %81 = load %77 : $*String                       // user: %83
  // function_ref FixedWidthInteger.init(_:)
  %82 = function_ref @$ss17FixedWidthIntegerPsEyxSgSScfC : $@convention(method) <0x1139b3a900_0 where 0x1139b3a900_0 : FixedWidthInteger> (@owned String, @thick 0x1139b3a900_0.Type) -> @out Optional<0x1139b3a900_0> // user: %83
  %83 = apply %82<Int>(%69, %81, %71) : $@convention(method) <0x1139b3a900_0 where 0x1139b3a900_0 : FixedWidthInteger> (@owned String, @thick 0x1139b3a900_0.Type) -> @out Optional<0x1139b3a900_0>
  dealloc_stack %77 : $*String                    // id: %84
  release_value %76 : $Array<String>              // id: %85
  %86 = load %69 : $*Optional<Int>                // user: %87
  switch_enum %86 : $Optional<Int>, case #Optional.some!enumelt: bb11, case #Optional.none!enumelt: bb4 // id: %87

bb4:                                              // Preds: bb3
  %88 = string_literal utf8 "main/main.swift"     // user: %97
  %89 = integer_literal $Builtin.Word, 15         // user: %100
  %90 = integer_literal $Builtin.Word, 45
  br bb5                                          // id: %91

bb5:                                              // Preds: bb4
  %92 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value" // user: %94
  %93 = integer_literal $Builtin.Word, 57         // user: %96
  %94 = builtin "ptrtoint_Word"(%92 : $Builtin.RawPointer) : $Builtin.Word // user: %96
  %95 = integer_literal $Builtin.Int8, 2          // users: %100, %107, %96
  %96 = struct $StaticString (%94 : $Builtin.Word, %93 : $Builtin.Word, %95 : $Builtin.Int8) // user: %113
  %97 = builtin "ptrtoint_Word"(%88 : $Builtin.RawPointer) : $Builtin.Word // user: %100
  br bb6                                          // id: %98

bb6:                                              // Preds: bb5
  br bb7                                          // id: %99

bb7:                                              // Preds: bb6
  %100 = struct $StaticString (%97 : $Builtin.Word, %89 : $Builtin.Word, %95 : $Builtin.Int8) // user: %113
  %101 = integer_literal $Builtin.Int64, 6        // user: %102
  %102 = struct $UInt (%101 : $Builtin.Int64)     // user: %113
  br bb8                                          // id: %103

bb8:                                              // Preds: bb7
  %104 = string_literal utf8 "Fatal error"        // user: %106
  %105 = integer_literal $Builtin.Word, 11        // user: %107
  %106 = builtin "ptrtoint_Word"(%104 : $Builtin.RawPointer) : $Builtin.Word // user: %107
  %107 = struct $StaticString (%106 : $Builtin.Word, %105 : $Builtin.Word, %95 : $Builtin.Int8) // user: %113
  br bb9                                          // id: %108

bb9:                                              // Preds: bb8
  %109 = integer_literal $Builtin.Int32, 1        // user: %110
  %110 = struct $UInt32 (%109 : $Builtin.Int32)   // user: %113
  br bb10                                         // id: %111

bb10:                                             // Preds: bb9
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %112 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %113
  %113 = apply %112(%107, %96, %100, %102, %110) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %114

// %115                                           // user: %116
bb11(%115 : $Int):                                // Preds: bb3
  store %115 to %68 : $*Int                       // id: %116
  dealloc_stack %69 : $*Optional<Int>             // id: %117
  alloc_global @$s4main8operand2Sivp              // id: %118
  %119 = global_addr @$s4main8operand2Sivp : $*Int // users: %393, %354, %310, %259, %208, %167
  %120 = alloc_stack $Optional<Int>               // users: %137, %168, %134
  %121 = metatype $@thin Int.Type
  %122 = metatype $@thick Int.Type                // user: %134
  %123 = metatype $@thin CommandLine.Type         // user: %127
  %124 = integer_literal $Builtin.Int64, 2        // user: %125
  %125 = struct $Int (%124 : $Builtin.Int64)      // user: %130
  // function_ref static CommandLine.arguments.getter
  %126 = function_ref @$ss11CommandLineO9argumentsSaySSGvgZ : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // user: %127
  %127 = apply %126(%123) : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // users: %130, %136
  %128 = alloc_stack $String                      // users: %131, %132, %135
  // function_ref specialized Array.subscript.getter
  %129 = function_ref @$sSayxSicigSS_Tg5 : $@convention(method) (Int, @guaranteed Array<String>) -> @owned String // user: %130
  %130 = apply %129(%125, %127) : $@convention(method) (Int, @guaranteed Array<String>) -> @owned String // user: %131
  store %130 to %128 : $*String                   // id: %131
  %132 = load %128 : $*String                     // user: %134
  // function_ref FixedWidthInteger.init(_:)
  %133 = function_ref @$ss17FixedWidthIntegerPsEyxSgSScfC : $@convention(method) <0x1139b3a900_0 where 0x1139b3a900_0 : FixedWidthInteger> (@owned String, @thick 0x1139b3a900_0.Type) -> @out Optional<0x1139b3a900_0> // user: %134
  %134 = apply %133<Int>(%120, %132, %122) : $@convention(method) <0x1139b3a900_0 where 0x1139b3a900_0 : FixedWidthInteger> (@owned String, @thick 0x1139b3a900_0.Type) -> @out Optional<0x1139b3a900_0>
  dealloc_stack %128 : $*String                   // id: %135
  release_value %127 : $Array<String>             // id: %136
  %137 = load %120 : $*Optional<Int>              // user: %138
  switch_enum %137 : $Optional<Int>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb12 // id: %138

bb12:                                             // Preds: bb11
  %139 = string_literal utf8 "main/main.swift"    // user: %148
  %140 = integer_literal $Builtin.Word, 15        // user: %151
  %141 = integer_literal $Builtin.Word, 45
  br bb13                                         // id: %142

bb13:                                             // Preds: bb12
  %143 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value" // user: %145
  %144 = integer_literal $Builtin.Word, 57        // user: %147
  %145 = builtin "ptrtoint_Word"(%143 : $Builtin.RawPointer) : $Builtin.Word // user: %147
  %146 = integer_literal $Builtin.Int8, 2         // users: %151, %158, %147
  %147 = struct $StaticString (%145 : $Builtin.Word, %144 : $Builtin.Word, %146 : $Builtin.Int8) // user: %164
  %148 = builtin "ptrtoint_Word"(%139 : $Builtin.RawPointer) : $Builtin.Word // user: %151
  br bb14                                         // id: %149

bb14:                                             // Preds: bb13
  br bb15                                         // id: %150

bb15:                                             // Preds: bb14
  %151 = struct $StaticString (%148 : $Builtin.Word, %140 : $Builtin.Word, %146 : $Builtin.Int8) // user: %164
  %152 = integer_literal $Builtin.Int64, 7        // user: %153
  %153 = struct $UInt (%152 : $Builtin.Int64)     // user: %164
  br bb16                                         // id: %154

bb16:                                             // Preds: bb15
  %155 = string_literal utf8 "Fatal error"        // user: %157
  %156 = integer_literal $Builtin.Word, 11        // user: %158
  %157 = builtin "ptrtoint_Word"(%155 : $Builtin.RawPointer) : $Builtin.Word // user: %158
  %158 = struct $StaticString (%157 : $Builtin.Word, %156 : $Builtin.Word, %146 : $Builtin.Int8) // user: %164
  br bb17                                         // id: %159

bb17:                                             // Preds: bb16
  %160 = integer_literal $Builtin.Int32, 1        // user: %161
  %161 = struct $UInt32 (%160 : $Builtin.Int32)   // user: %164
  br bb18                                         // id: %162

bb18:                                             // Preds: bb17
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %163 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %164
  %164 = apply %163(%158, %147, %151, %153, %161) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %165

// %166                                           // user: %167
bb19(%166 : $Int):                                // Preds: bb11
  store %166 to %119 : $*Int                      // id: %167
  dealloc_stack %120 : $*Optional<Int>            // id: %168
  alloc_global @$s4main2opSSvp                    // id: %169
  %170 = global_addr @$s4main2opSSvp : $*String   // users: %178, %500, %180
  %171 = metatype $@thin CommandLine.Type         // user: %175
  %172 = integer_literal $Builtin.Int64, 1        // user: %173
  %173 = struct $Int (%172 : $Builtin.Int64)      // user: %177
  // function_ref static CommandLine.arguments.getter
  %174 = function_ref @$ss11CommandLineO9argumentsSaySSGvgZ : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // user: %175
  %175 = apply %174(%171) : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // users: %177, %179
  // function_ref specialized Array.subscript.getter
  %176 = function_ref @$sSayxSicigSS_Tg5 : $@convention(method) (Int, @guaranteed Array<String>) -> @owned String // user: %177
  %177 = apply %176(%173, %175) : $@convention(method) (Int, @guaranteed Array<String>) -> @owned String // user: %178
  store %177 to %170 : $*String                   // id: %178
  release_value %175 : $Array<String>             // id: %179
  %180 = load %170 : $*String                     // users: %473, %353, %343, %334, %333, %302, %292, %283, %282, %251, %241, %232, %231, %200, %190, %181
  retain_value %180 : $String                     // id: %181
  %182 = string_literal utf8 "+"                  // user: %187
  %183 = integer_literal $Builtin.Word, 1         // user: %187
  %184 = integer_literal $Builtin.Int1, -1        // user: %187
  %185 = metatype $@thin String.Type              // user: %187
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %186 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %187
  %187 = apply %186(%182, %183, %184, %185) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %197, %195, %194, %188
  retain_value %187 : $String                     // id: %188
  %189 = alloc_stack $String                      // users: %191, %190, %196
  store %180 to %189 : $*String                   // id: %190
  %191 = load %189 : $*String                     // user: %194
  %192 = metatype $@thin String.Type              // user: %194
  // function_ref static String.== infix(_:_:)
  %193 = function_ref @$sSS2eeoiySbSS_SStFZ : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %194
  %194 = apply %193(%187, %191, %192) : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %198
  release_value %187 : $String                    // id: %195
  dealloc_stack %189 : $*String                   // id: %196
  release_value %187 : $String                    // id: %197
  %198 = struct_extract %194 : $Bool, #Bool._value // user: %199
  cond_br %198, bb20, bb21                        // id: %199

bb20:                                             // Preds: bb19
  release_value %180 : $String                    // id: %200
  %201 = integer_literal $Builtin.Word, 1         // user: %203
  // function_ref specialized _allocateUninitializedArray<A>(_:)
  %202 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlFyp_Tg5 : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // user: %203
  %203 = apply %202(%201) : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // users: %204, %205
  %204 = tuple_extract %203 : $(Array<Any>, Builtin.RawPointer), 0 // user: %220
  %205 = tuple_extract %203 : $(Array<Any>, Builtin.RawPointer), 1 // user: %206
  %206 = pointer_to_address %205 : $Builtin.RawPointer to [strict] $*Any // user: %217
  %207 = load %68 : $*Int                         // user: %209
  %208 = load %119 : $*Int                        // user: %210
  %209 = struct_extract %207 : $Int, #Int._value  // user: %212
  %210 = struct_extract %208 : $Int, #Int._value  // user: %212
  %211 = integer_literal $Builtin.Int1, -1        // user: %212
  %212 = builtin "sadd_with_overflow_Int64"(%209 : $Builtin.Int64, %210 : $Builtin.Int64, %211 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %214, %213
  %213 = tuple_extract %212 : $(Builtin.Int64, Builtin.Int1), 0 // user: %216
  %214 = tuple_extract %212 : $(Builtin.Int64, Builtin.Int1), 1 // user: %215
  cond_fail %214 : $Builtin.Int1, "arithmetic overflow" // id: %215
  %216 = struct $Int (%213 : $Builtin.Int64)      // user: %218
  %217 = init_existential_addr %206 : $*Any, $Int // user: %218
  store %216 to %217 : $*Int                      // id: %218
  // function_ref _finalizeUninitializedArray<A>(_:)
  %219 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // user: %220
  %220 = apply %219<Any>(%204) : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // users: %229, %226
  // function_ref default argument 1 of print(_:separator:terminator:)
  %221 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %222
  %222 = apply %221() : $@convention(thin) () -> @owned String // users: %228, %226
  // function_ref default argument 2 of print(_:separator:terminator:)
  %223 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %224
  %224 = apply %223() : $@convention(thin) () -> @owned String // users: %227, %226
  // function_ref print(_:separator:terminator:)
  %225 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %226
  %226 = apply %225(%220, %222, %224) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %224 : $String                    // id: %227
  release_value %222 : $String                    // id: %228
  release_value %220 : $Array<Any>                // id: %229
  br bb44                                         // id: %230

bb21:                                             // Preds: bb19
  release_value %180 : $String                    // id: %231
  retain_value %180 : $String                     // id: %232
  %233 = string_literal utf8 "-"                  // user: %238
  %234 = integer_literal $Builtin.Word, 1         // user: %238
  %235 = integer_literal $Builtin.Int1, -1        // user: %238
  %236 = metatype $@thin String.Type              // user: %238
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %237 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %238
  %238 = apply %237(%233, %234, %235, %236) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %248, %246, %245, %239
  retain_value %238 : $String                     // id: %239
  %240 = alloc_stack $String                      // users: %242, %241, %247
  store %180 to %240 : $*String                   // id: %241
  %242 = load %240 : $*String                     // user: %245
  %243 = metatype $@thin String.Type              // user: %245
  // function_ref static String.== infix(_:_:)
  %244 = function_ref @$sSS2eeoiySbSS_SStFZ : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %245
  %245 = apply %244(%238, %242, %243) : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %249
  release_value %238 : $String                    // id: %246
  dealloc_stack %240 : $*String                   // id: %247
  release_value %238 : $String                    // id: %248
  %249 = struct_extract %245 : $Bool, #Bool._value // user: %250
  cond_br %249, bb22, bb23                        // id: %250

bb22:                                             // Preds: bb21
  release_value %180 : $String                    // id: %251
  %252 = integer_literal $Builtin.Word, 1         // user: %254
  // function_ref specialized _allocateUninitializedArray<A>(_:)
  %253 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlFyp_Tg5 : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // user: %254
  %254 = apply %253(%252) : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // users: %255, %256
  %255 = tuple_extract %254 : $(Array<Any>, Builtin.RawPointer), 0 // user: %271
  %256 = tuple_extract %254 : $(Array<Any>, Builtin.RawPointer), 1 // user: %257
  %257 = pointer_to_address %256 : $Builtin.RawPointer to [strict] $*Any // user: %268
  %258 = load %68 : $*Int                         // user: %260
  %259 = load %119 : $*Int                        // user: %261
  %260 = struct_extract %258 : $Int, #Int._value  // user: %263
  %261 = struct_extract %259 : $Int, #Int._value  // user: %263
  %262 = integer_literal $Builtin.Int1, -1        // user: %263
  %263 = builtin "ssub_with_overflow_Int64"(%260 : $Builtin.Int64, %261 : $Builtin.Int64, %262 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %265, %264
  %264 = tuple_extract %263 : $(Builtin.Int64, Builtin.Int1), 0 // user: %267
  %265 = tuple_extract %263 : $(Builtin.Int64, Builtin.Int1), 1 // user: %266
  cond_fail %265 : $Builtin.Int1, "arithmetic overflow" // id: %266
  %267 = struct $Int (%264 : $Builtin.Int64)      // user: %269
  %268 = init_existential_addr %257 : $*Any, $Int // user: %269
  store %267 to %268 : $*Int                      // id: %269
  // function_ref _finalizeUninitializedArray<A>(_:)
  %270 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // user: %271
  %271 = apply %270<Any>(%255) : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // users: %280, %277
  // function_ref default argument 1 of print(_:separator:terminator:)
  %272 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %273
  %273 = apply %272() : $@convention(thin) () -> @owned String // users: %279, %277
  // function_ref default argument 2 of print(_:separator:terminator:)
  %274 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %275
  %275 = apply %274() : $@convention(thin) () -> @owned String // users: %278, %277
  // function_ref print(_:separator:terminator:)
  %276 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %277
  %277 = apply %276(%271, %273, %275) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %275 : $String                    // id: %278
  release_value %273 : $String                    // id: %279
  release_value %271 : $Array<Any>                // id: %280
  br bb44                                         // id: %281

bb23:                                             // Preds: bb21
  release_value %180 : $String                    // id: %282
  retain_value %180 : $String                     // id: %283
  %284 = string_literal utf8 "*"                  // user: %289
  %285 = integer_literal $Builtin.Word, 1         // user: %289
  %286 = integer_literal $Builtin.Int1, -1        // user: %289
  %287 = metatype $@thin String.Type              // user: %289
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %288 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %289
  %289 = apply %288(%284, %285, %286, %287) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %299, %297, %296, %290
  retain_value %289 : $String                     // id: %290
  %291 = alloc_stack $String                      // users: %293, %292, %298
  store %180 to %291 : $*String                   // id: %292
  %293 = load %291 : $*String                     // user: %296
  %294 = metatype $@thin String.Type              // user: %296
  // function_ref static String.== infix(_:_:)
  %295 = function_ref @$sSS2eeoiySbSS_SStFZ : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %296
  %296 = apply %295(%289, %293, %294) : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %300
  release_value %289 : $String                    // id: %297
  dealloc_stack %291 : $*String                   // id: %298
  release_value %289 : $String                    // id: %299
  %300 = struct_extract %296 : $Bool, #Bool._value // user: %301
  cond_br %300, bb24, bb25                        // id: %301

bb24:                                             // Preds: bb23
  release_value %180 : $String                    // id: %302
  %303 = integer_literal $Builtin.Word, 1         // user: %305
  // function_ref specialized _allocateUninitializedArray<A>(_:)
  %304 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlFyp_Tg5 : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // user: %305
  %305 = apply %304(%303) : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // users: %306, %307
  %306 = tuple_extract %305 : $(Array<Any>, Builtin.RawPointer), 0 // user: %322
  %307 = tuple_extract %305 : $(Array<Any>, Builtin.RawPointer), 1 // user: %308
  %308 = pointer_to_address %307 : $Builtin.RawPointer to [strict] $*Any // user: %319
  %309 = load %68 : $*Int                         // user: %311
  %310 = load %119 : $*Int                        // user: %312
  %311 = struct_extract %309 : $Int, #Int._value  // user: %314
  %312 = struct_extract %310 : $Int, #Int._value  // user: %314
  %313 = integer_literal $Builtin.Int1, -1        // user: %314
  %314 = builtin "smul_with_overflow_Int64"(%311 : $Builtin.Int64, %312 : $Builtin.Int64, %313 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %316, %315
  %315 = tuple_extract %314 : $(Builtin.Int64, Builtin.Int1), 0 // user: %318
  %316 = tuple_extract %314 : $(Builtin.Int64, Builtin.Int1), 1 // user: %317
  cond_fail %316 : $Builtin.Int1, "arithmetic overflow" // id: %317
  %318 = struct $Int (%315 : $Builtin.Int64)      // user: %320
  %319 = init_existential_addr %308 : $*Any, $Int // user: %320
  store %318 to %319 : $*Int                      // id: %320
  // function_ref _finalizeUninitializedArray<A>(_:)
  %321 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // user: %322
  %322 = apply %321<Any>(%306) : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // users: %331, %328
  // function_ref default argument 1 of print(_:separator:terminator:)
  %323 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %324
  %324 = apply %323() : $@convention(thin) () -> @owned String // users: %330, %328
  // function_ref default argument 2 of print(_:separator:terminator:)
  %325 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %326
  %326 = apply %325() : $@convention(thin) () -> @owned String // users: %329, %328
  // function_ref print(_:separator:terminator:)
  %327 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %328
  %328 = apply %327(%322, %324, %326) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %326 : $String                    // id: %329
  release_value %324 : $String                    // id: %330
  release_value %322 : $Array<Any>                // id: %331
  br bb44                                         // id: %332

bb25:                                             // Preds: bb23
  release_value %180 : $String                    // id: %333
  retain_value %180 : $String                     // id: %334
  %335 = string_literal utf8 "/"                  // user: %340
  %336 = integer_literal $Builtin.Word, 1         // user: %340
  %337 = integer_literal $Builtin.Int1, -1        // user: %340
  %338 = metatype $@thin String.Type              // user: %340
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %339 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %340
  %340 = apply %339(%335, %336, %337, %338) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %350, %348, %347, %341
  retain_value %340 : $String                     // id: %341
  %342 = alloc_stack $String                      // users: %344, %343, %349
  store %180 to %342 : $*String                   // id: %343
  %344 = load %342 : $*String                     // user: %347
  %345 = metatype $@thin String.Type              // user: %347
  // function_ref static String.== infix(_:_:)
  %346 = function_ref @$sSS2eeoiySbSS_SStFZ : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %347
  %347 = apply %346(%340, %344, %345) : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %351
  release_value %340 : $String                    // id: %348
  dealloc_stack %342 : $*String                   // id: %349
  release_value %340 : $String                    // id: %350
  %351 = struct_extract %347 : $Bool, #Bool._value // user: %352
  cond_br %351, bb26, bb43                        // id: %352

bb26:                                             // Preds: bb25
  release_value %180 : $String                    // id: %353
  %354 = load %119 : $*Int                        // user: %356
  %355 = integer_literal $Builtin.Int64, 0        // user: %357
  %356 = struct_extract %354 : $Int, #Int._value  // user: %357
  %357 = builtin "cmp_eq_Int64"(%356 : $Builtin.Int64, %355 : $Builtin.Int64) : $Builtin.Int1 // user: %358
  cond_br %357, bb27, bb28                        // id: %358

bb27:                                             // Preds: bb26
  %359 = integer_literal $Builtin.Word, 1         // user: %361
  // function_ref specialized _allocateUninitializedArray<A>(_:)
  %360 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlFyp_Tg5 : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // user: %361
  %361 = apply %360(%359) : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // users: %362, %363
  %362 = tuple_extract %361 : $(Array<Any>, Builtin.RawPointer), 0 // user: %374
  %363 = tuple_extract %361 : $(Array<Any>, Builtin.RawPointer), 1 // user: %364
  %364 = pointer_to_address %363 : $Builtin.RawPointer to [strict] $*Any // user: %371
  %365 = string_literal utf8 "ERROR: operand2 being 0 causes a division by 0 error" // user: %370
  %366 = integer_literal $Builtin.Word, 52        // user: %370
  %367 = integer_literal $Builtin.Int1, -1        // user: %370
  %368 = metatype $@thin String.Type              // user: %370
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %369 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %370
  %370 = apply %369(%365, %366, %367, %368) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %372
  %371 = init_existential_addr %364 : $*Any, $String // user: %372
  store %370 to %371 : $*String                   // id: %372
  // function_ref _finalizeUninitializedArray<A>(_:)
  %373 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // user: %374
  %374 = apply %373<Any>(%362) : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // users: %383, %380
  // function_ref default argument 1 of print(_:separator:terminator:)
  %375 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %376
  %376 = apply %375() : $@convention(thin) () -> @owned String // users: %382, %380
  // function_ref default argument 2 of print(_:separator:terminator:)
  %377 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %378
  %378 = apply %377() : $@convention(thin) () -> @owned String // users: %381, %380
  // function_ref print(_:separator:terminator:)
  %379 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %380
  %380 = apply %379(%374, %376, %378) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %378 : $String                    // id: %381
  release_value %376 : $String                    // id: %382
  release_value %374 : $Array<Any>                // id: %383
  br bb29                                         // id: %384

bb28:                                             // Preds: bb26
  br bb29                                         // id: %385

bb29:                                             // Preds: bb27 bb28
  %386 = integer_literal $Builtin.Word, 1         // user: %388
  // function_ref specialized _allocateUninitializedArray<A>(_:)
  %387 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlFyp_Tg5 : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // user: %388
  %388 = apply %387(%386) : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // users: %389, %390
  %389 = tuple_extract %388 : $(Array<Any>, Builtin.RawPointer), 0 // user: %451
  %390 = tuple_extract %388 : $(Array<Any>, Builtin.RawPointer), 1 // user: %391
  %391 = pointer_to_address %390 : $Builtin.RawPointer to [strict] $*Any // user: %448
  %392 = load %68 : $*Int                         // user: %394
  %393 = load %119 : $*Int                        // user: %396
  %394 = struct_extract %392 : $Int, #Int._value  // users: %446, %414
  %395 = integer_literal $Builtin.Int64, 0        // user: %397
  %396 = struct_extract %393 : $Int, #Int._value  // users: %446, %428, %397
  %397 = builtin "cmp_eq_Int64"(%396 : $Builtin.Int64, %395 : $Builtin.Int64) : $Builtin.Int1 // user: %399
  %398 = integer_literal $Builtin.Int1, 0         // users: %430, %432, %399
  %399 = builtin "int_expect_Int1"(%397 : $Builtin.Int1, %398 : $Builtin.Int1) : $Builtin.Int1 // user: %400
  cond_br %399, bb30, bb31                        // id: %400

bb30:                                             // Preds: bb29
  %401 = string_literal utf8 "Division by zero"   // user: %403
  %402 = integer_literal $Builtin.Word, 16        // user: %405
  %403 = builtin "ptrtoint_Word"(%401 : $Builtin.RawPointer) : $Builtin.Word // user: %405
  %404 = integer_literal $Builtin.Int8, 2         // users: %419, %409, %405
  %405 = struct $StaticString (%403 : $Builtin.Word, %402 : $Builtin.Word, %404 : $Builtin.Int8) // user: %425
  %406 = string_literal utf8 "Swift/IntegerTypes.swift" // user: %408
  %407 = integer_literal $Builtin.Word, 24        // user: %409
  %408 = builtin "ptrtoint_Word"(%406 : $Builtin.RawPointer) : $Builtin.Word // user: %409
  %409 = struct $StaticString (%408 : $Builtin.Word, %407 : $Builtin.Word, %404 : $Builtin.Int8) // user: %425
  %410 = integer_literal $Builtin.Int64, 14145    // user: %411
  %411 = struct $UInt (%410 : $Builtin.Int64)     // user: %425
  br bb32                                         // id: %412

bb31:                                             // Preds: bb29
  %413 = integer_literal $Builtin.Int64, -9223372036854775808 // user: %414
  %414 = builtin "cmp_eq_Int64"(%394 : $Builtin.Int64, %413 : $Builtin.Int64) : $Builtin.Int1 // user: %415
  cond_br %414, bb35, bb36                        // id: %415

bb32:                                             // Preds: bb30
  %416 = string_literal utf8 "Fatal error"        // user: %418
  %417 = integer_literal $Builtin.Word, 11        // user: %419
  %418 = builtin "ptrtoint_Word"(%416 : $Builtin.RawPointer) : $Builtin.Word // user: %419
  %419 = struct $StaticString (%418 : $Builtin.Word, %417 : $Builtin.Word, %404 : $Builtin.Int8) // user: %425
  br bb33                                         // id: %420

bb33:                                             // Preds: bb32
  %421 = integer_literal $Builtin.Int32, 1        // user: %422
  %422 = struct $UInt32 (%421 : $Builtin.Int32)   // user: %425
  br bb34                                         // id: %423

bb34:                                             // Preds: bb33
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %424 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %425
  %425 = apply %424(%419, %405, %409, %411, %422) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %426

bb35:                                             // Preds: bb31
  %427 = integer_literal $Builtin.Int64, -1       // user: %428
  %428 = builtin "cmp_eq_Int64"(%396 : $Builtin.Int64, %427 : $Builtin.Int64) : $Builtin.Int1 // user: %429
  br bb37(%428 : $Builtin.Int1)                   // id: %429

bb36:                                             // Preds: bb31
  br bb37(%398 : $Builtin.Int1)                   // id: %430

// %431                                           // user: %432
bb37(%431 : $Builtin.Int1):                       // Preds: bb36 bb35
  %432 = builtin "int_expect_Int1"(%431 : $Builtin.Int1, %398 : $Builtin.Int1) : $Builtin.Int1 // user: %433
  cond_br %432, bb38, bb39                        // id: %433

bb38:                                             // Preds: bb37
  %434 = string_literal utf8 "Division results in an overflow" // user: %436
  %435 = integer_literal $Builtin.Word, 31        // user: %438
  %436 = builtin "ptrtoint_Word"(%434 : $Builtin.RawPointer) : $Builtin.Word // user: %438
  %437 = integer_literal $Builtin.Int8, 2         // users: %465, %442, %438
  %438 = struct $StaticString (%436 : $Builtin.Word, %435 : $Builtin.Word, %437 : $Builtin.Int8) // user: %471
  %439 = string_literal utf8 "Swift/IntegerTypes.swift" // user: %441
  %440 = integer_literal $Builtin.Word, 24        // user: %442
  %441 = builtin "ptrtoint_Word"(%439 : $Builtin.RawPointer) : $Builtin.Word // user: %442
  %442 = struct $StaticString (%441 : $Builtin.Word, %440 : $Builtin.Word, %437 : $Builtin.Int8) // user: %471
  %443 = integer_literal $Builtin.Int64, 14152    // user: %444
  %444 = struct $UInt (%443 : $Builtin.Int64)     // user: %471
  br bb40                                         // id: %445

bb39:                                             // Preds: bb37
  %446 = builtin "sdiv_Int64"(%394 : $Builtin.Int64, %396 : $Builtin.Int64) : $Builtin.Int64 // user: %447
  %447 = struct $Int (%446 : $Builtin.Int64)      // user: %449
  %448 = init_existential_addr %391 : $*Any, $Int // user: %449
  store %447 to %448 : $*Int                      // id: %449
  // function_ref _finalizeUninitializedArray<A>(_:)
  %450 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // user: %451
  %451 = apply %450<Any>(%389) : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // users: %460, %457
  // function_ref default argument 1 of print(_:separator:terminator:)
  %452 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %453
  %453 = apply %452() : $@convention(thin) () -> @owned String // users: %459, %457
  // function_ref default argument 2 of print(_:separator:terminator:)
  %454 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %455
  %455 = apply %454() : $@convention(thin) () -> @owned String // users: %458, %457
  // function_ref print(_:separator:terminator:)
  %456 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %457
  %457 = apply %456(%451, %453, %455) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %455 : $String                    // id: %458
  release_value %453 : $String                    // id: %459
  release_value %451 : $Array<Any>                // id: %460
  br bb44                                         // id: %461

bb40:                                             // Preds: bb38
  %462 = string_literal utf8 "Fatal error"        // user: %464
  %463 = integer_literal $Builtin.Word, 11        // user: %465
  %464 = builtin "ptrtoint_Word"(%462 : $Builtin.RawPointer) : $Builtin.Word // user: %465
  %465 = struct $StaticString (%464 : $Builtin.Word, %463 : $Builtin.Word, %437 : $Builtin.Int8) // user: %471
  br bb41                                         // id: %466

bb41:                                             // Preds: bb40
  %467 = integer_literal $Builtin.Int32, 1        // user: %468
  %468 = struct $UInt32 (%467 : $Builtin.Int32)   // user: %471
  br bb42                                         // id: %469

bb42:                                             // Preds: bb41
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %470 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %471
  %471 = apply %470(%465, %438, %442, %444, %468) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %472

bb43:                                             // Preds: bb25
  release_value %180 : $String                    // id: %473
  %474 = integer_literal $Builtin.Word, 1         // user: %476
  // function_ref specialized _allocateUninitializedArray<A>(_:)
  %475 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlFyp_Tg5 : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // user: %476
  %476 = apply %475(%474) : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer) // users: %477, %478
  %477 = tuple_extract %476 : $(Array<Any>, Builtin.RawPointer), 0 // user: %529
  %478 = tuple_extract %476 : $(Array<Any>, Builtin.RawPointer), 1 // user: %479
  %479 = pointer_to_address %478 : $Builtin.RawPointer to [strict] $*Any // user: %526
  %480 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %519, %488, %522, %521, %495, %503, %514
  %481 = integer_literal $Builtin.Int64, 37       // user: %482
  %482 = struct $Int (%481 : $Builtin.Int64)      // user: %487
  %483 = integer_literal $Builtin.Int64, 1        // user: %484
  %484 = struct $Int (%483 : $Builtin.Int64)      // user: %487
  %485 = metatype $@thin DefaultStringInterpolation.Type // user: %487
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %486 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %487
  %487 = apply %486(%482, %484, %485) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %488
  store %487 to %480 : $*DefaultStringInterpolation // id: %488
  %489 = string_literal utf8 "ERROR: \""          // user: %494
  %490 = integer_literal $Builtin.Word, 8         // user: %494
  %491 = integer_literal $Builtin.Int1, -1        // user: %494
  %492 = metatype $@thin String.Type              // user: %494
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %493 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %494
  %494 = apply %493(%489, %490, %491, %492) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %499, %497
  %495 = begin_access [modify] [static] %480 : $*DefaultStringInterpolation // users: %498, %497
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %496 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %497
  %497 = apply %496(%494, %495) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %495 : $*DefaultStringInterpolation  // id: %498
  release_value %494 : $String                    // id: %499
  %500 = load %170 : $*String                     // user: %502
  %501 = alloc_stack $String                      // users: %502, %507, %505
  store %500 to %501 : $*String                   // id: %502
  %503 = begin_access [modify] [static] %480 : $*DefaultStringInterpolation // users: %506, %505
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %504 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <0x1139b3a900_0 where 0x1139b3a900_0 : CustomStringConvertible, 0x1139b3a900_0 : TextOutputStreamable> (@in_guaranteed 0x1139b3a900_0, @inout DefaultStringInterpolation) -> () // user: %505
  %505 = apply %504<String>(%501, %503) : $@convention(method) <0x1139b3a900_0 where 0x1139b3a900_0 : CustomStringConvertible, 0x1139b3a900_0 : TextOutputStreamable> (@in_guaranteed 0x1139b3a900_0, @inout DefaultStringInterpolation) -> ()
  end_access %503 : $*DefaultStringInterpolation  // id: %506
  dealloc_stack %501 : $*String                   // id: %507
  %508 = string_literal utf8 "\" is not a supported operator" // user: %513
  %509 = integer_literal $Builtin.Word, 29        // user: %513
  %510 = integer_literal $Builtin.Int1, -1        // user: %513
  %511 = metatype $@thin String.Type              // user: %513
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %512 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %513
  %513 = apply %512(%508, %509, %510, %511) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %518, %516
  %514 = begin_access [modify] [static] %480 : $*DefaultStringInterpolation // users: %517, %516
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %515 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %516
  %516 = apply %515(%513, %514) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %514 : $*DefaultStringInterpolation  // id: %517
  release_value %513 : $String                    // id: %518
  %519 = load %480 : $*DefaultStringInterpolation // users: %525, %520
  retain_value %519 : $DefaultStringInterpolation // id: %520
  destroy_addr %480 : $*DefaultStringInterpolation // id: %521
  dealloc_stack %480 : $*DefaultStringInterpolation // id: %522
  %523 = metatype $@thin String.Type              // user: %525
  // function_ref String.init(stringInterpolation:)
  %524 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %525
  %525 = apply %524(%519, %523) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %527
  %526 = init_existential_addr %479 : $*Any, $String // user: %527
  store %525 to %526 : $*String                   // id: %527
  // function_ref _finalizeUninitializedArray<A>(_:)
  %528 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // user: %529
  %529 = apply %528<Any>(%477) : $@convention(thin) <0x1139b3a900_0> (@owned Array<0x1139b3a900_0>) -> @owned Array<0x1139b3a900_0> // users: %538, %535
  // function_ref default argument 1 of print(_:separator:terminator:)
  %530 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %531
  %531 = apply %530() : $@convention(thin) () -> @owned String // users: %537, %535
  // function_ref default argument 2 of print(_:separator:terminator:)
  %532 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %533
  %533 = apply %532() : $@convention(thin) () -> @owned String // users: %536, %535
  // function_ref print(_:separator:terminator:)
  %534 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %535
  %535 = apply %534(%529, %531, %533) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %533 : $String                    // id: %536
  release_value %531 : $String                    // id: %537
  release_value %529 : $Array<Any>                // id: %538
  br bb44                                         // id: %539

bb44:                                             // Preds: bb43 bb39 bb24 bb22 bb20
  %540 = integer_literal $Builtin.Int32, 0        // user: %541
  %541 = struct $Int32 (%540 : $Builtin.Int32)    // user: %542
  return %541 : $Int32                            // id: %542
} // end sil function 'main'

// static CommandLine.arguments.getter
sil @$ss11CommandLineO9argumentsSaySSGvgZ : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String>

// Array.count.getter
sil @$sSa5countSivg : $@convention(method) <0x1139b3a900_0> (@guaranteed Array<0x1139b3a900_0>) -> Int

// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  %3 = tuple_extract %2 : $(Builtin.Int64, Builtin.Int1), 0 // user: %4
  %4 = struct $Int (%3 : $Builtin.Int64)          // user: %5
  return %4 : $Int                                // id: %5
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'

// static BinaryInteger.!= infix(_:_:)
sil public_external [transparent] @$sSzsE2neoiySbx_xtFZ : $@convention(method) <Self where Self : BinaryInteger> (@in_guaranteed Self, @in_guaranteed Self, @thick Self.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Self, %1 : $*Self, %2 : $@thick Self.Type):
  %3 = metatype $@thick Self.Type                 // user: %5
  %4 = witness_method $Self, #Equatable."==" : <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Equatable) <0x1139b3a900_0 where 0x1139b3a900_0 : Equatable> (@in_guaranteed 0x1139b3a900_0, @in_guaranteed 0x1139b3a900_0, @thick 0x1139b3a900_0.Type) -> Bool // user: %5
  %5 = apply %4<Self>(%0, %1, %3) : $@convention(witness_method: Equatable) <0x1139b3a900_0 where 0x1139b3a900_0 : Equatable> (@in_guaranteed 0x1139b3a900_0, @in_guaranteed 0x1139b3a900_0, @thick 0x1139b3a900_0.Type) -> Bool // user: %6
  %6 = struct_extract %5 : $Bool, #Bool._value    // user: %8
  %7 = integer_literal $Builtin.Int1, -1          // user: %8
  %8 = builtin "xor_Int1"(%6 : $Builtin.Int1, %7 : $Builtin.Int1) : $Builtin.Int1 // user: %9
  %9 = struct $Bool (%8 : $Builtin.Int1)          // user: %10
  return %9 : $Bool                               // id: %10
} // end sil function '$sSzsE2neoiySbx_xtFZ'

// _allocateUninitializedArray<A>(_:)
sil [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <0x1139b3a900_0> (Builtin.Word) -> (@owned Array<0x1139b3a900_0>, Builtin.RawPointer)

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// _finalizeUninitializedArray<A>(_:)
sil shared_external [_semantics "array.finalize_intrinsic"] @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <Element> (@owned Array<Element>) -> @owned Array<Element> {
// %0                                             // user: %2
bb0(%0 : $Array<Element>):
  %1 = alloc_stack $Array<Element>                // users: %5, %2, %6, %4
  store %0 to %1 : $*Array<Element>               // id: %2
  // function_ref Array._endMutation()
  %3 = function_ref @$sSa12_endMutationyyF : $@convention(method) <0x1139b3a900_0> (@inout Array<0x1139b3a900_0>) -> () // user: %4
  %4 = apply %3<Element>(%1) : $@convention(method) <0x1139b3a900_0> (@inout Array<0x1139b3a900_0>) -> ()
  %5 = load %1 : $*Array<Element>                 // user: %7
  dealloc_stack %1 : $*Array<Element>             // id: %6
  return %5 : $Array<Element>                     // id: %7
} // end sil function '$ss27_finalizeUninitializedArrayySayxGABnlF'

// default argument 1 of print(_:separator:terminator:)
sil shared_external @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 " "                    // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA0_'

// default argument 2 of print(_:separator:terminator:)
sil shared_external @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 "\n"                   // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA1_'

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// Array.subscript.getter
sil @$sSayxSicig : $@convention(method) <0x1139b3a900_0> (Int, @guaranteed Array<0x1139b3a900_0>) -> @out 0x1139b3a900_0

// FixedWidthInteger.init(_:)
sil [always_inline] @$ss17FixedWidthIntegerPsEyxSgSScfC : $@convention(method) <0x1139b3a900_0 where 0x1139b3a900_0 : FixedWidthInteger> (@owned String, @thick 0x1139b3a900_0.Type) -> @out Optional<0x1139b3a900_0>

// _diagnoseUnexpectedNilOptional(_filenameStart:_filenameLength:_filenameIsASCII:_line:_isImplicitUnwrap:)
sil public_external [transparent] @$ss30_diagnoseUnexpectedNilOptional14_filenameStart01_E6Length01_E7IsASCII5_line17_isImplicitUnwrapyBp_BwBi1_BwBi1_tF : $@convention(thin) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, Builtin.Word, Builtin.Int1) -> () {
// %0                                             // users: %37, %11
// %1                                             // users: %43, %17
// %2                                             // users: %38, %12
// %3                                             // users: %44, %18
// %4                                             // user: %5
bb0(%0 : $Builtin.RawPointer, %1 : $Builtin.Word, %2 : $Builtin.Int1, %3 : $Builtin.Word, %4 : $Builtin.Int1):
  cond_br %4, bb8, bb1                            // id: %5

bb1:                                              // Preds: bb0
  %6 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value" // user: %8
  %7 = integer_literal $Builtin.Word, 57          // user: %10
  %8 = builtin "ptrtoint_Word"(%6 : $Builtin.RawPointer) : $Builtin.Word // user: %10
  %9 = integer_literal $Builtin.Int8, 2           // users: %24, %15, %10
  %10 = struct $StaticString (%8 : $Builtin.Word, %7 : $Builtin.Word, %9 : $Builtin.Int8) // user: %30
  %11 = builtin "ptrtoint_Word"(%0 : $Builtin.RawPointer) : $Builtin.Word // user: %17
  cond_br %2, bb3, bb2                            // id: %12

bb2:                                              // Preds: bb1
  %13 = integer_literal $Builtin.Int8, 0          // user: %14
  br bb4(%13 : $Builtin.Int8)                     // id: %14

bb3:                                              // Preds: bb1
  br bb4(%9 : $Builtin.Int8)                      // id: %15

// %16                                            // user: %17
bb4(%16 : $Builtin.Int8):                         // Preds: bb3 bb2
  %17 = struct $StaticString (%11 : $Builtin.Word, %1 : $Builtin.Word, %16 : $Builtin.Int8) // user: %30
  %18 = builtin "zextOrBitCast_Word_Int64"(%3 : $Builtin.Word) : $Builtin.Int64 // user: %19
  %19 = struct $UInt (%18 : $Builtin.Int64)       // user: %30
  br bb5                                          // id: %20

bb5:                                              // Preds: bb4
  %21 = string_literal utf8 "Fatal error"         // user: %23
  %22 = integer_literal $Builtin.Word, 11         // user: %24
  %23 = builtin "ptrtoint_Word"(%21 : $Builtin.RawPointer) : $Builtin.Word // user: %24
  %24 = struct $StaticString (%23 : $Builtin.Word, %22 : $Builtin.Word, %9 : $Builtin.Int8) // user: %30
  br bb6                                          // id: %25

bb6:                                              // Preds: bb5
  %26 = integer_literal $Builtin.Int32, 1         // user: %27
  %27 = struct $UInt32 (%26 : $Builtin.Int32)     // user: %30
  br bb7                                          // id: %28

bb7:                                              // Preds: bb6
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %29 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %30
  %30 = apply %29(%24, %10, %17, %19, %27) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %31

bb8:                                              // Preds: bb0
  %32 = string_literal utf8 "Unexpectedly found nil while implicitly unwrapping an Optional value" // user: %34
  %33 = integer_literal $Builtin.Word, 68         // user: %36
  %34 = builtin "ptrtoint_Word"(%32 : $Builtin.RawPointer) : $Builtin.Word // user: %36
  %35 = integer_literal $Builtin.Int8, 2          // users: %50, %41, %36
  %36 = struct $StaticString (%34 : $Builtin.Word, %33 : $Builtin.Word, %35 : $Builtin.Int8) // user: %56
  %37 = builtin "ptrtoint_Word"(%0 : $Builtin.RawPointer) : $Builtin.Word // user: %43
  cond_br %2, bb10, bb9                           // id: %38

bb9:                                              // Preds: bb8
  %39 = integer_literal $Builtin.Int8, 0          // user: %40
  br bb11(%39 : $Builtin.Int8)                    // id: %40

bb10:                                             // Preds: bb8
  br bb11(%35 : $Builtin.Int8)                    // id: %41

// %42                                            // user: %43
bb11(%42 : $Builtin.Int8):                        // Preds: bb10 bb9
  %43 = struct $StaticString (%37 : $Builtin.Word, %1 : $Builtin.Word, %42 : $Builtin.Int8) // user: %56
  %44 = builtin "zextOrBitCast_Word_Int64"(%3 : $Builtin.Word) : $Builtin.Int64 // user: %45
  %45 = struct $UInt (%44 : $Builtin.Int64)       // user: %56
  br bb12                                         // id: %46

bb12:                                             // Preds: bb11
  %47 = string_literal utf8 "Fatal error"         // user: %49
  %48 = integer_literal $Builtin.Word, 11         // user: %50
  %49 = builtin "ptrtoint_Word"(%47 : $Builtin.RawPointer) : $Builtin.Word // user: %50
  %50 = struct $StaticString (%49 : $Builtin.Word, %48 : $Builtin.Word, %35 : $Builtin.Int8) // user: %56
  br bb13                                         // id: %51

bb13:                                             // Preds: bb12
  %52 = integer_literal $Builtin.Int32, 1         // user: %53
  %53 = struct $UInt32 (%52 : $Builtin.Int32)     // user: %56
  br bb14                                         // id: %54

bb14:                                             // Preds: bb13
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %55 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %56
  %56 = apply %55(%50, %36, %43, %45, %53) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %57
} // end sil function '$ss30_diagnoseUnexpectedNilOptional14_filenameStart01_E6Length01_E7IsASCII5_line17_isImplicitUnwrapyBp_BwBi1_BwBi1_tF'

// ~= infix<A>(_:_:)
sil public_external [transparent] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <T where T : Equatable> (@in_guaranteed T, @in_guaranteed T) -> Bool {
// %0                                             // user: %4
// %1                                             // user: %4
bb0(%0 : $*T, %1 : $*T):
  %2 = metatype $@thick T.Type                    // user: %4
  %3 = witness_method $T, #Equatable."==" : <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Equatable) <0x1139b3a900_0 where 0x1139b3a900_0 : Equatable> (@in_guaranteed 0x1139b3a900_0, @in_guaranteed 0x1139b3a900_0, @thick 0x1139b3a900_0.Type) -> Bool // user: %4
  %4 = apply %3<T>(%0, %1, %2) : $@convention(witness_method: Equatable) <0x1139b3a900_0 where 0x1139b3a900_0 : Equatable> (@in_guaranteed 0x1139b3a900_0, @in_guaranteed 0x1139b3a900_0, @thick 0x1139b3a900_0.Type) -> Bool // user: %5
  return %4 : $Bool                               // id: %5
} // end sil function '$ss2teoiySbx_xtSQRzlF'

// static Int.+ infix(_:_:)
sil public_external [transparent] @$sSi1poiyS2i_SitFZ : $@convention(method) (Int, Int, @thin Int.Type) -> Int {
// %0                                             // user: %3
// %1                                             // user: %4
bb0(%0 : $Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_extract %0 : $Int, #Int._value      // user: %6
  %4 = struct_extract %1 : $Int, #Int._value      // user: %6
  %5 = integer_literal $Builtin.Int1, -1          // user: %6
  %6 = builtin "sadd_with_overflow_Int64"(%3 : $Builtin.Int64, %4 : $Builtin.Int64, %5 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %8, %7
  %7 = tuple_extract %6 : $(Builtin.Int64, Builtin.Int1), 0 // user: %10
  %8 = tuple_extract %6 : $(Builtin.Int64, Builtin.Int1), 1 // user: %9
  cond_fail %8 : $Builtin.Int1, "arithmetic overflow" // id: %9
  %10 = struct $Int (%7 : $Builtin.Int64)         // user: %11
  return %10 : $Int                               // id: %11
} // end sil function '$sSi1poiyS2i_SitFZ'

// static Int.- infix(_:_:)
sil public_external [transparent] @$sSi1soiyS2i_SitFZ : $@convention(method) (Int, Int, @thin Int.Type) -> Int {
// %0                                             // user: %3
// %1                                             // user: %4
bb0(%0 : $Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_extract %0 : $Int, #Int._value      // user: %6
  %4 = struct_extract %1 : $Int, #Int._value      // user: %6
  %5 = integer_literal $Builtin.Int1, -1          // user: %6
  %6 = builtin "ssub_with_overflow_Int64"(%3 : $Builtin.Int64, %4 : $Builtin.Int64, %5 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %8, %7
  %7 = tuple_extract %6 : $(Builtin.Int64, Builtin.Int1), 0 // user: %10
  %8 = tuple_extract %6 : $(Builtin.Int64, Builtin.Int1), 1 // user: %9
  cond_fail %8 : $Builtin.Int1, "arithmetic overflow" // id: %9
  %10 = struct $Int (%7 : $Builtin.Int64)         // user: %11
  return %10 : $Int                               // id: %11
} // end sil function '$sSi1soiyS2i_SitFZ'

// static Int.* infix(_:_:)
sil public_external [transparent] @$sSi1moiyS2i_SitFZ : $@convention(method) (Int, Int, @thin Int.Type) -> Int {
// %0                                             // user: %3
// %1                                             // user: %4
bb0(%0 : $Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_extract %0 : $Int, #Int._value      // user: %6
  %4 = struct_extract %1 : $Int, #Int._value      // user: %6
  %5 = integer_literal $Builtin.Int1, -1          // user: %6
  %6 = builtin "smul_with_overflow_Int64"(%3 : $Builtin.Int64, %4 : $Builtin.Int64, %5 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %8, %7
  %7 = tuple_extract %6 : $(Builtin.Int64, Builtin.Int1), 0 // user: %10
  %8 = tuple_extract %6 : $(Builtin.Int64, Builtin.Int1), 1 // user: %9
  cond_fail %8 : $Builtin.Int1, "arithmetic overflow" // id: %9
  %10 = struct $Int (%7 : $Builtin.Int64)         // user: %11
  return %10 : $Int                               // id: %11
} // end sil function '$sSi1moiyS2i_SitFZ'

// static Int.== infix(_:_:)
sil public_external [transparent] @$sSi2eeoiySbSi_SitFZ : $@convention(method) (Int, Int, @thin Int.Type) -> Bool {
// %0                                             // user: %3
// %1                                             // user: %4
bb0(%0 : $Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_extract %0 : $Int, #Int._value      // user: %5
  %4 = struct_extract %1 : $Int, #Int._value      // user: %5
  %5 = builtin "cmp_eq_Int64"(%3 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1 // user: %6
  %6 = struct $Bool (%5 : $Builtin.Int1)          // user: %7
  return %6 : $Bool                               // id: %7
} // end sil function '$sSi2eeoiySbSi_SitFZ'

// static Int./ infix(_:_:)
sil public_external [transparent] @$sSi1doiyS2i_SitFZ : $@convention(method) (Int, Int, @thin Int.Type) -> Int {
// %0                                             // user: %3
// %1                                             // user: %5
bb0(%0 : $Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_extract %0 : $Int, #Int._value      // users: %20, %11
  %4 = integer_literal $Builtin.Int64, 0          // user: %6
  %5 = struct_extract %1 : $Int, #Int._value      // users: %20, %15, %6
  %6 = builtin "cmp_eq_Int64"(%5 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1 // user: %8
  %7 = integer_literal $Builtin.Int1, 0           // users: %18, %13, %8
  %8 = builtin "int_expect_Int1"(%6 : $Builtin.Int1, %7 : $Builtin.Int1) : $Builtin.Int1 // user: %9
  cond_br %8, bb10, bb1                           // id: %9

bb1:                                              // Preds: bb0
  %10 = integer_literal $Builtin.Int64, -9223372036854775808 // user: %11
  %11 = builtin "cmp_eq_Int64"(%3 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1 // user: %12
  cond_br %11, bb3, bb2                           // id: %12

bb2:                                              // Preds: bb1
  br bb4(%7 : $Builtin.Int1)                      // id: %13

bb3:                                              // Preds: bb1
  %14 = integer_literal $Builtin.Int64, -1        // user: %15
  %15 = builtin "cmp_eq_Int64"(%5 : $Builtin.Int64, %14 : $Builtin.Int64) : $Builtin.Int1 // user: %16
  br bb4(%15 : $Builtin.Int1)                     // id: %16

// %17                                            // user: %18
bb4(%17 : $Builtin.Int1):                         // Preds: bb3 bb2
  %18 = builtin "int_expect_Int1"(%17 : $Builtin.Int1, %7 : $Builtin.Int1) : $Builtin.Int1 // user: %19
  cond_br %18, bb6, bb5                           // id: %19

bb5:                                              // Preds: bb4
  %20 = builtin "sdiv_Int64"(%3 : $Builtin.Int64, %5 : $Builtin.Int64) : $Builtin.Int64 // user: %21
  %21 = struct $Int (%20 : $Builtin.Int64)        // user: %22
  return %21 : $Int                               // id: %22

bb6:                                              // Preds: bb4
  %23 = string_literal utf8 "Division results in an overflow" // user: %25
  %24 = integer_literal $Builtin.Word, 31         // user: %27
  %25 = builtin "ptrtoint_Word"(%23 : $Builtin.RawPointer) : $Builtin.Word // user: %27
  %26 = integer_literal $Builtin.Int8, 2          // users: %38, %31, %27
  %27 = struct $StaticString (%25 : $Builtin.Word, %24 : $Builtin.Word, %26 : $Builtin.Int8) // user: %44
  %28 = string_literal utf8 "Swift/IntegerTypes.swift" // user: %30
  %29 = integer_literal $Builtin.Word, 24         // user: %31
  %30 = builtin "ptrtoint_Word"(%28 : $Builtin.RawPointer) : $Builtin.Word // user: %31
  %31 = struct $StaticString (%30 : $Builtin.Word, %29 : $Builtin.Word, %26 : $Builtin.Int8) // user: %44
  %32 = integer_literal $Builtin.Int64, 14152     // user: %33
  %33 = struct $UInt (%32 : $Builtin.Int64)       // user: %44
  br bb7                                          // id: %34

bb7:                                              // Preds: bb6
  %35 = string_literal utf8 "Fatal error"         // user: %37
  %36 = integer_literal $Builtin.Word, 11         // user: %38
  %37 = builtin "ptrtoint_Word"(%35 : $Builtin.RawPointer) : $Builtin.Word // user: %38
  %38 = struct $StaticString (%37 : $Builtin.Word, %36 : $Builtin.Word, %26 : $Builtin.Int8) // user: %44
  br bb8                                          // id: %39

bb8:                                              // Preds: bb7
  %40 = integer_literal $Builtin.Int32, 1         // user: %41
  %41 = struct $UInt32 (%40 : $Builtin.Int32)     // user: %44
  br bb9                                          // id: %42

bb9:                                              // Preds: bb8
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %43 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %44
  %44 = apply %43(%38, %27, %31, %33, %41) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %45

bb10:                                             // Preds: bb0
  %46 = string_literal utf8 "Division by zero"    // user: %48
  %47 = integer_literal $Builtin.Word, 16         // user: %50
  %48 = builtin "ptrtoint_Word"(%46 : $Builtin.RawPointer) : $Builtin.Word // user: %50
  %49 = integer_literal $Builtin.Int8, 2          // users: %61, %54, %50
  %50 = struct $StaticString (%48 : $Builtin.Word, %47 : $Builtin.Word, %49 : $Builtin.Int8) // user: %67
  %51 = string_literal utf8 "Swift/IntegerTypes.swift" // user: %53
  %52 = integer_literal $Builtin.Word, 24         // user: %54
  %53 = builtin "ptrtoint_Word"(%51 : $Builtin.RawPointer) : $Builtin.Word // user: %54
  %54 = struct $StaticString (%53 : $Builtin.Word, %52 : $Builtin.Word, %49 : $Builtin.Int8) // user: %67
  %55 = integer_literal $Builtin.Int64, 14145     // user: %56
  %56 = struct $UInt (%55 : $Builtin.Int64)       // user: %67
  br bb11                                         // id: %57

bb11:                                             // Preds: bb10
  %58 = string_literal utf8 "Fatal error"         // user: %60
  %59 = integer_literal $Builtin.Word, 11         // user: %61
  %60 = builtin "ptrtoint_Word"(%58 : $Builtin.RawPointer) : $Builtin.Word // user: %61
  %61 = struct $StaticString (%60 : $Builtin.Word, %59 : $Builtin.Word, %49 : $Builtin.Int8) // user: %67
  br bb12                                         // id: %62

bb12:                                             // Preds: bb11
  %63 = integer_literal $Builtin.Int32, 1         // user: %64
  %64 = struct $UInt32 (%63 : $Builtin.Int32)     // user: %67
  br bb13                                         // id: %65

bb13:                                             // Preds: bb12
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %66 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %67
  %67 = apply %66(%61, %50, %54, %56, %64) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %68
} // end sil function '$sSi1doiyS2i_SitFZ'

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// DefaultStringInterpolation.appendLiteral(_:)
sil @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <0x1139b3a900_0 where 0x1139b3a900_0 : CustomStringConvertible, 0x1139b3a900_0 : TextOutputStreamable> (@in_guaranteed 0x1139b3a900_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// _assertionFailure(_:_:file:line:flags:)
sil [noinline] [_semantics "programtermination_point"] @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never

// protocol witness for static Equatable.== infix(_:_:) in conformance String
sil shared_external [transparent] [thunk] [always_inline] @$sSSSQsSQ2eeoiySbx_xtFZTW : $@convention(witness_method: Equatable) (@in_guaranteed String, @in_guaranteed String, @thick String.Type) -> Bool {
// %0                                             // user: %3
// %1                                             // user: %4
bb0(%0 : $*String, %1 : $*String, %2 : $@thick String.Type):
  %3 = load %0 : $*String                         // user: %7
  %4 = load %1 : $*String                         // user: %7
  %5 = metatype $@thin String.Type                // user: %7
  // function_ref static String.== infix(_:_:)
  %6 = function_ref @$sSS2eeoiySbSS_SStFZ : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %7
  %7 = apply %6(%3, %4, %5) : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %8
  return %7 : $Bool                               // id: %8
} // end sil function '$sSSSQsSQ2eeoiySbx_xtFZTW'

// static String.== infix(_:_:)
sil [always_inline] [readonly] [_semantics "string.equals"] @$sSS2eeoiySbSS_SStFZ : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool

// protocol witness for static Equatable.== infix(_:_:) in conformance Int
sil shared_external [transparent] [thunk] @$sSiSQsSQ2eeoiySbx_xtFZTW : $@convention(witness_method: Equatable) (@in_guaranteed Int, @in_guaranteed Int, @thick Int.Type) -> Bool {
// %0                                             // user: %3
// %1                                             // user: %5
bb0(%0 : $*Int, %1 : $*Int, %2 : $@thick Int.Type):
  %3 = struct_element_addr %0 : $*Int, #Int._value // user: %4
  %4 = load %3 : $*Builtin.Int64                  // user: %7
  %5 = struct_element_addr %1 : $*Int, #Int._value // user: %6
  %6 = load %5 : $*Builtin.Int64                  // user: %7
  %7 = builtin "cmp_eq_Int64"(%4 : $Builtin.Int64, %6 : $Builtin.Int64) : $Builtin.Int1 // user: %8
  %8 = struct $Bool (%7 : $Builtin.Int1)          // user: %9
  return %8 : $Bool                               // id: %9
} // end sil function '$sSiSQsSQ2eeoiySbx_xtFZTW'

// Array._endMutation()
sil shared_external [_semantics "array.end_mutation"] @$sSa12_endMutationyyF : $@convention(method) <Element> (@inout Array<Element>) -> () {
// %0                                             // users: %196, %1
bb0(%0 : $*Array<Element>):
  %1 = struct_element_addr %0 : $*Array<Element>, #Array._buffer // user: %2
  %2 = struct_element_addr %1 : $*_ArrayBuffer<Element>, #_ArrayBuffer._storage // user: %3
  %3 = struct_element_addr %2 : $*_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue // users: %191, %183, %4
  %4 = load %3 : $*Builtin.BridgeObject           // users: %96, %88, %64, %34, %35, %44, %89
  %5 = metatype $@thick Element.Type              // users: %14, %6
  %6 = builtin "canBeClass"<Element>(%5 : $@thick Element.Type) : $Builtin.Int8 // users: %11, %8
  %7 = integer_literal $Builtin.Int8, 0           // user: %8
  %8 = builtin "cmp_eq_Int8"(%6 : $Builtin.Int8, %7 : $Builtin.Int8) : $Builtin.Int1 // user: %9
  cond_br %8, bb4, bb1                            // id: %9

bb1:                                              // Preds: bb0
  %10 = integer_literal $Builtin.Int8, 1          // user: %11
  %11 = builtin "cmp_eq_Int8"(%6 : $Builtin.Int8, %10 : $Builtin.Int8) : $Builtin.Int1 // user: %12
  cond_br %11, bb3, bb2                           // id: %12

bb2:                                              // Preds: bb1
  // function_ref _swift_isClassOrObjCExistentialType
  %13 = function_ref @_swift_isClassOrObjCExistentialType : $@convention(thin) <0x1139b3a900_0> (@thick 0x1139b3a900_0.Type) -> Bool // user: %14
  %14 = apply %13<Element>(%5) : $@convention(thin) <0x1139b3a900_0> (@thick 0x1139b3a900_0.Type) -> Bool // user: %15
  %15 = struct_extract %14 : $Bool, #Bool._value  // user: %16
  br bb5(%15 : $Builtin.Int1)                     // id: %16

bb3:                                              // Preds: bb1
  %17 = integer_literal $Builtin.Int1, -1         // user: %18
  br bb5(%17 : $Builtin.Int1)                     // id: %18

bb4:                                              // Preds: bb0
  %19 = integer_literal $Builtin.Int1, 0          // user: %20
  br bb5(%19 : $Builtin.Int1)                     // id: %20

// %21                                            // user: %22
bb5(%21 : $Builtin.Int1):                         // Preds: bb4 bb3 bb2
  cond_br %21, bb15, bb6                          // id: %22

bb6:                                              // Preds: bb5
  %23 = string_literal utf8 "Swift/BridgeStorage.swift" // user: %25
  %24 = integer_literal $Builtin.Word, 25         // user: %27
  %25 = builtin "ptrtoint_Word"(%23 : $Builtin.RawPointer) : $Builtin.Word // user: %27
  %26 = integer_literal $Builtin.Int8, 2          // users: %69, %56, %33, %27
  %27 = struct $StaticString (%25 : $Builtin.Word, %24 : $Builtin.Word, %26 : $Builtin.Int8) // users: %75, %62
  %28 = integer_literal $Builtin.Int64, 127       // user: %29
  %29 = struct $UInt (%28 : $Builtin.Int64)       // user: %75
  %30 = string_literal utf8 ""                    // user: %32
  %31 = integer_literal $Builtin.Word, 0          // user: %33
  %32 = builtin "ptrtoint_Word"(%30 : $Builtin.RawPointer) : $Builtin.Word // user: %33
  %33 = struct $StaticString (%32 : $Builtin.Word, %31 : $Builtin.Word, %26 : $Builtin.Int8) // users: %75, %62
  strong_retain %4 : $Builtin.BridgeObject        // id: %34
  %35 = classify_bridge_object %4 : $Builtin.BridgeObject // users: %37, %36
  %36 = tuple_extract %35 : $(Builtin.Int1, Builtin.Int1), 0 // user: %38
  %37 = tuple_extract %35 : $(Builtin.Int1, Builtin.Int1), 1 // user: %38
  %38 = builtin "or_Int1"(%36 : $Builtin.Int1, %37 : $Builtin.Int1) : $Builtin.Int1 // user: %40
  %39 = integer_literal $Builtin.Int1, 0          // user: %40
  %40 = builtin "int_expect_Int1"(%38 : $Builtin.Int1, %39 : $Builtin.Int1) : $Builtin.Int1 // user: %41
  cond_br %40, bb12, bb7                          // id: %41

bb7:                                              // Preds: bb6
  %42 = integer_literal $Builtin.Int64, 128       // user: %43
  %43 = struct $UInt (%42 : $Builtin.Int64)       // user: %62
  %44 = bridge_object_to_word %4 : $Builtin.BridgeObject to $Builtin.Word // user: %45
  %45 = builtin "zextOrBitCast_Word_Int64"(%44 : $Builtin.Word) : $Builtin.Int64 // user: %47
  %46 = integer_literal $Builtin.Int64, 9151314442816847879 // user: %47
  %47 = builtin "and_Int64"(%45 : $Builtin.Int64, %46 : $Builtin.Int64) : $Builtin.Int64 // user: %49
  %48 = integer_literal $Builtin.Int64, 0         // user: %49
  %49 = builtin "cmp_eq_Int64"(%47 : $Builtin.Int64, %48 : $Builtin.Int64) : $Builtin.Int1 // user: %51
  %50 = integer_literal $Builtin.Int1, -1         // user: %51
  %51 = builtin "int_expect_Int1"(%49 : $Builtin.Int1, %50 : $Builtin.Int1) : $Builtin.Int1 // user: %52
  cond_br %51, bb11, bb8                          // id: %52

bb8:                                              // Preds: bb7
  %53 = string_literal utf8 "Fatal error"         // user: %55
  %54 = integer_literal $Builtin.Word, 11         // user: %56
  %55 = builtin "ptrtoint_Word"(%53 : $Builtin.RawPointer) : $Builtin.Word // user: %56
  %56 = struct $StaticString (%55 : $Builtin.Word, %54 : $Builtin.Word, %26 : $Builtin.Int8) // user: %62
  br bb9                                          // id: %57

bb9:                                              // Preds: bb8
  %58 = integer_literal $Builtin.Int32, 1         // user: %59
  %59 = struct $UInt32 (%58 : $Builtin.Int32)     // user: %62
  br bb10                                         // id: %60

bb10:                                             // Preds: bb9
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %61 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %62
  %62 = apply %61(%56, %33, %27, %43, %59) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %63

bb11:                                             // Preds: bb7
  %64 = unchecked_ref_cast %4 : $Builtin.BridgeObject to $__ContiguousArrayStorageBase // user: %65
  br bb17(%64 : $__ContiguousArrayStorageBase)    // id: %65

bb12:                                             // Preds: bb6
  %66 = string_literal utf8 "Fatal error"         // user: %68
  %67 = integer_literal $Builtin.Word, 11         // user: %69
  %68 = builtin "ptrtoint_Word"(%66 : $Builtin.RawPointer) : $Builtin.Word // user: %69
  %69 = struct $StaticString (%68 : $Builtin.Word, %67 : $Builtin.Word, %26 : $Builtin.Int8) // user: %75
  br bb13                                         // id: %70

bb13:                                             // Preds: bb12
  %71 = integer_literal $Builtin.Int32, 1         // user: %72
  %72 = struct $UInt32 (%71 : $Builtin.Int32)     // user: %75
  br bb14                                         // id: %73

bb14:                                             // Preds: bb13
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %74 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %75
  %75 = apply %74(%69, %33, %27, %29, %72) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %76

bb15:                                             // Preds: bb5
  %77 = string_literal utf8 "Swift/BridgeStorage.swift" // user: %79
  %78 = integer_literal $Builtin.Word, 25         // user: %81
  %79 = builtin "ptrtoint_Word"(%77 : $Builtin.RawPointer) : $Builtin.Word // user: %81
  %80 = integer_literal $Builtin.Int8, 2          // users: %235, %87, %81
  %81 = struct $StaticString (%79 : $Builtin.Word, %78 : $Builtin.Word, %80 : $Builtin.Int8) // user: %241
  %82 = integer_literal $Builtin.Int64, 119       // user: %83
  %83 = struct $UInt (%82 : $Builtin.Int64)       // user: %241
  %84 = string_literal utf8 ""                    // user: %86
  %85 = integer_literal $Builtin.Word, 0          // user: %87
  %86 = builtin "ptrtoint_Word"(%84 : $Builtin.RawPointer) : $Builtin.Word // user: %87
  %87 = struct $StaticString (%86 : $Builtin.Word, %85 : $Builtin.Word, %80 : $Builtin.Int8) // user: %241
  strong_retain %4 : $Builtin.BridgeObject        // id: %88
  %89 = classify_bridge_object %4 : $Builtin.BridgeObject // users: %91, %90
  %90 = tuple_extract %89 : $(Builtin.Int1, Builtin.Int1), 0 // user: %92
  %91 = tuple_extract %89 : $(Builtin.Int1, Builtin.Int1), 1 // user: %92
  %92 = builtin "or_Int1"(%90 : $Builtin.Int1, %91 : $Builtin.Int1) : $Builtin.Int1 // user: %94
  %93 = integer_literal $Builtin.Int1, 0          // user: %94
  %94 = builtin "int_expect_Int1"(%92 : $Builtin.Int1, %93 : $Builtin.Int1) : $Builtin.Int1 // user: %95
  cond_br %94, bb42, bb16                         // id: %95

bb16:                                             // Preds: bb15
  %96 = bridge_object_to_ref %4 : $Builtin.BridgeObject to $__ContiguousArrayStorageBase // user: %97
  br bb17(%96 : $__ContiguousArrayStorageBase)    // id: %97

// %98                                            // users: %156, %151, %114, %108, %100, %99, %153
bb17(%98 : $__ContiguousArrayStorageBase):        // Preds: bb16 bb11
  strong_retain %98 : $__ContiguousArrayStorageBase // id: %99
  %100 = struct $_ContiguousArrayBuffer<Element> (%98 : $__ContiguousArrayStorageBase) // users: %172, %116
  %101 = integer_literal $Builtin.Int1, -1        // user: %102
  %102 = struct $Bool (%101 : $Builtin.Int1)      // user: %155
  %103 = integer_literal $Builtin.Word, 9999      // user: %106
  %104 = integer_literal $Builtin.Word, 0         // users: %182, %106, %106
  // function_ref _stdlib_isOSVersionAtLeast(_:_:_:)
  %105 = function_ref @$ss26_stdlib_isOSVersionAtLeastyBi1_Bw_BwBwtF : $@convention(thin) (Builtin.Word, Builtin.Word, Builtin.Word) -> Builtin.Int1 // user: %106
  %106 = apply %105(%103, %104, %104) : $@convention(thin) (Builtin.Word, Builtin.Word, Builtin.Word) -> Builtin.Int1 // user: %107
  cond_br %106, bb19, bb18                        // id: %107

bb18:                                             // Preds: bb17
  strong_release %98 : $__ContiguousArrayStorageBase // id: %108
  br bb31                                         // id: %109

bb19:                                             // Preds: bb17
  // function_ref swift_COWChecksEnabled
  %110 = function_ref @swift_COWChecksEnabled : $@convention(thin) () -> Bool // user: %111
  %111 = apply %110() : $@convention(thin) () -> Bool // user: %112
  %112 = struct_extract %111 : $Bool, #Bool._value // user: %113
  cond_br %112, bb21, bb20                        // id: %113

bb20:                                             // Preds: bb19
  strong_release %98 : $__ContiguousArrayStorageBase // id: %114
  br bb31                                         // id: %115

bb21:                                             // Preds: bb19
  %116 = struct_extract %100 : $_ContiguousArrayBuffer<Element>, #_ContiguousArrayBuffer._storage // user: %117
  %117 = ref_element_addr %116 : $__ContiguousArrayStorageBase, #__ContiguousArrayStorageBase.countAndCapacity // user: %118
  %118 = struct_element_addr %117 : $*_ArrayBody, #_ArrayBody._storage // user: %119
  %119 = struct_element_addr %118 : $*_SwiftArrayBodyStorage, #_SwiftArrayBodyStorage._capacityAndFlags // user: %120
  %120 = struct_element_addr %119 : $*UInt, #UInt._value // user: %121
  %121 = load %120 : $*Builtin.Int64              // user: %123
  %122 = integer_literal $Builtin.Int64, 1        // user: %123
  %123 = builtin "lshr_Int64"(%121 : $Builtin.Int64, %122 : $Builtin.Int64) : $Builtin.Int64 // users: %149, %137
  %124 = string_literal utf8 "Not enough bits to represent the passed value" // user: %126
  %125 = integer_literal $Builtin.Word, 45        // user: %128
  %126 = builtin "ptrtoint_Word"(%124 : $Builtin.RawPointer) : $Builtin.Word // user: %128
  %127 = integer_literal $Builtin.Int8, 2         // users: %224, %213, %164, %160, %132, %128
  %128 = struct $StaticString (%126 : $Builtin.Word, %125 : $Builtin.Word, %127 : $Builtin.Int8) // user: %230
  %129 = string_literal utf8 "Swift/Integers.swift" // user: %131
  %130 = integer_literal $Builtin.Word, 20        // user: %132
  %131 = builtin "ptrtoint_Word"(%129 : $Builtin.RawPointer) : $Builtin.Word // user: %132
  %132 = struct $StaticString (%131 : $Builtin.Word, %130 : $Builtin.Word, %127 : $Builtin.Int8) // user: %230
  %133 = integer_literal $Builtin.Int64, 3553     // user: %134
  %134 = struct $UInt (%133 : $Builtin.Int64)     // user: %230
  br bb22                                         // id: %135

bb22:                                             // Preds: bb21
  %136 = integer_literal $Builtin.Int64, 0        // user: %137
  %137 = builtin "cmp_slt_Int64"(%123 : $Builtin.Int64, %136 : $Builtin.Int64) : $Builtin.Int1 // user: %138
  cond_br %137, bb24, bb23                        // id: %138

bb23:                                             // Preds: bb22
  %139 = integer_literal $Builtin.Int1, 0         // user: %140
  br bb25(%139 : $Builtin.Int1)                   // id: %140

bb24:                                             // Preds: bb22
  %141 = integer_literal $Builtin.Int1, 0         // user: %142
  br bb25(%141 : $Builtin.Int1)                   // id: %142

// %143                                           // user: %145
bb25(%143 : $Builtin.Int1):                       // Preds: bb24 bb23
  %144 = integer_literal $Builtin.Int1, 0         // user: %145
  %145 = builtin "int_expect_Int1"(%143 : $Builtin.Int1, %144 : $Builtin.Int1) : $Builtin.Int1 // user: %146
  cond_br %145, bb39, bb26                        // id: %146

bb26:                                             // Preds: bb25
  br bb27                                         // id: %147

bb27:                                             // Preds: bb26
  %148 = integer_literal $Builtin.Int64, 0        // user: %149
  %149 = builtin "cmp_slt_Int64"(%148 : $Builtin.Int64, %123 : $Builtin.Int64) : $Builtin.Int1 // user: %150
  cond_br %149, bb29, bb28                        // id: %150

bb28:                                             // Preds: bb27
  strong_release %98 : $__ContiguousArrayStorageBase // id: %151
  br bb31                                         // id: %152

bb29:                                             // Preds: bb27
  %153 = init_existential_ref %98 : $__ContiguousArrayStorageBase : $__ContiguousArrayStorageBase, $AnyObject // user: %155
  // function_ref _swift_setImmutableCOWBuffer
  %154 = function_ref @_swift_setImmutableCOWBuffer : $@convention(thin) (@guaranteed AnyObject, Bool) -> Bool // user: %155
  %155 = apply %154(%153, %102) : $@convention(thin) (@guaranteed AnyObject, Bool) -> Bool // user: %167
  strong_release %98 : $__ContiguousArrayStorageBase // id: %156
  %157 = string_literal utf8 "re-setting immutable array buffer to immutable" // user: %159
  %158 = integer_literal $Builtin.Word, 46        // user: %160
  %159 = builtin "ptrtoint_Word"(%157 : $Builtin.RawPointer) : $Builtin.Word // user: %160
  %160 = struct $StaticString (%159 : $Builtin.Word, %158 : $Builtin.Word, %127 : $Builtin.Int8) // user: %219
  %161 = string_literal utf8 "Swift/ContiguousArrayBuffer.swift" // user: %163
  %162 = integer_literal $Builtin.Word, 33        // user: %164
  %163 = builtin "ptrtoint_Word"(%161 : $Builtin.RawPointer) : $Builtin.Word // user: %164
  %164 = struct $StaticString (%163 : $Builtin.Word, %162 : $Builtin.Word, %127 : $Builtin.Int8) // user: %219
  %165 = integer_literal $Builtin.Int64, 487      // user: %166
  %166 = struct $UInt (%165 : $Builtin.Int64)     // user: %219
  %167 = struct_extract %155 : $Bool, #Bool._value // user: %169
  %168 = integer_literal $Builtin.Int1, 0         // user: %169
  %169 = builtin "int_expect_Int1"(%167 : $Builtin.Int1, %168 : $Builtin.Int1) : $Builtin.Int1 // user: %170
  cond_br %169, bb36, bb30                        // id: %170

bb30:                                             // Preds: bb29
  br bb31                                         // id: %171

bb31:                                             // Preds: bb30 bb28 bb20 bb18
  release_value %100 : $_ContiguousArrayBuffer<Element> // id: %172
  %173 = string_literal utf8 "Swift/BridgeStorage.swift" // user: %175
  %174 = integer_literal $Builtin.Word, 25        // user: %177
  %175 = builtin "ptrtoint_Word"(%173 : $Builtin.RawPointer) : $Builtin.Word // user: %177
  %176 = integer_literal $Builtin.Int8, 2         // users: %202, %182, %177
  %177 = struct $StaticString (%175 : $Builtin.Word, %174 : $Builtin.Word, %176 : $Builtin.Int8) // user: %208
  %178 = integer_literal $Builtin.Int64, 150      // user: %179
  %179 = struct $UInt (%178 : $Builtin.Int64)     // user: %208
  %180 = string_literal utf8 ""                   // user: %181
  %181 = builtin "ptrtoint_Word"(%180 : $Builtin.RawPointer) : $Builtin.Word // user: %182
  %182 = struct $StaticString (%181 : $Builtin.Word, %104 : $Builtin.Word, %176 : $Builtin.Int8) // user: %208
  %183 = load %3 : $*Builtin.BridgeObject         // user: %184
  %184 = classify_bridge_object %183 : $Builtin.BridgeObject // users: %186, %185
  %185 = tuple_extract %184 : $(Builtin.Int1, Builtin.Int1), 0 // user: %187
  %186 = tuple_extract %184 : $(Builtin.Int1, Builtin.Int1), 1 // user: %187
  %187 = builtin "or_Int1"(%185 : $Builtin.Int1, %186 : $Builtin.Int1) : $Builtin.Int1 // user: %189
  %188 = integer_literal $Builtin.Int1, 0         // user: %189
  %189 = builtin "int_expect_Int1"(%187 : $Builtin.Int1, %188 : $Builtin.Int1) : $Builtin.Int1 // user: %190
  cond_br %189, bb33, bb32                        // id: %190

bb32:                                             // Preds: bb31
  %191 = load %3 : $*Builtin.BridgeObject         // user: %192
  %192 = end_cow_mutation %191 : $Builtin.BridgeObject // user: %193
  %193 = struct $_BridgeStorage<__ContiguousArrayStorageBase> (%192 : $Builtin.BridgeObject) // user: %194
  %194 = struct $_ArrayBuffer<Element> (%193 : $_BridgeStorage<__ContiguousArrayStorageBase>) // user: %195
  %195 = struct $Array<Element> (%194 : $_ArrayBuffer<Element>) // user: %196
  store %195 to %0 : $*Array<Element>             // id: %196
  %197 = tuple ()                                 // user: %198
  return %197 : $()                               // id: %198

bb33:                                             // Preds: bb31
  %199 = string_literal utf8 "Fatal error"        // user: %201
  %200 = integer_literal $Builtin.Word, 11        // user: %202
  %201 = builtin "ptrtoint_Word"(%199 : $Builtin.RawPointer) : $Builtin.Word // user: %202
  %202 = struct $StaticString (%201 : $Builtin.Word, %200 : $Builtin.Word, %176 : $Builtin.Int8) // user: %208
  br bb34                                         // id: %203

bb34:                                             // Preds: bb33
  %204 = integer_literal $Builtin.Int32, 1        // user: %205
  %205 = struct $UInt32 (%204 : $Builtin.Int32)   // user: %208
  br bb35                                         // id: %206

bb35:                                             // Preds: bb34
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %207 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %208
  %208 = apply %207(%202, %182, %177, %179, %205) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %209

bb36:                                             // Preds: bb29
  %210 = string_literal utf8 "Fatal error"        // user: %212
  %211 = integer_literal $Builtin.Word, 11        // user: %213
  %212 = builtin "ptrtoint_Word"(%210 : $Builtin.RawPointer) : $Builtin.Word // user: %213
  %213 = struct $StaticString (%212 : $Builtin.Word, %211 : $Builtin.Word, %127 : $Builtin.Int8) // user: %219
  br bb37                                         // id: %214

bb37:                                             // Preds: bb36
  %215 = integer_literal $Builtin.Int32, 1        // user: %216
  %216 = struct $UInt32 (%215 : $Builtin.Int32)   // user: %219
  br bb38                                         // id: %217

bb38:                                             // Preds: bb37
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %218 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %219
  %219 = apply %218(%213, %160, %164, %166, %216) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %220

bb39:                                             // Preds: bb25
  %221 = string_literal utf8 "Fatal error"        // user: %223
  %222 = integer_literal $Builtin.Word, 11        // user: %224
  %223 = builtin "ptrtoint_Word"(%221 : $Builtin.RawPointer) : $Builtin.Word // user: %224
  %224 = struct $StaticString (%223 : $Builtin.Word, %222 : $Builtin.Word, %127 : $Builtin.Int8) // user: %230
  br bb40                                         // id: %225

bb40:                                             // Preds: bb39
  %226 = integer_literal $Builtin.Int32, 1        // user: %227
  %227 = struct $UInt32 (%226 : $Builtin.Int32)   // user: %230
  br bb41                                         // id: %228

bb41:                                             // Preds: bb40
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %229 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %230
  %230 = apply %229(%224, %128, %132, %134, %227) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %231

bb42:                                             // Preds: bb15
  %232 = string_literal utf8 "Fatal error"        // user: %234
  %233 = integer_literal $Builtin.Word, 11        // user: %235
  %234 = builtin "ptrtoint_Word"(%232 : $Builtin.RawPointer) : $Builtin.Word // user: %235
  %235 = struct $StaticString (%234 : $Builtin.Word, %233 : $Builtin.Word, %80 : $Builtin.Int8) // user: %241
  br bb43                                         // id: %236

bb43:                                             // Preds: bb42
  %237 = integer_literal $Builtin.Int32, 1        // user: %238
  %238 = struct $UInt32 (%237 : $Builtin.Int32)   // user: %241
  br bb44                                         // id: %239

bb44:                                             // Preds: bb43
  // function_ref _fatalErrorMessage(_:_:file:line:flags:)
  %240 = function_ref @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %241
  %241 = apply %240(%235, %87, %81, %83, %238) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %242
} // end sil function '$sSa12_endMutationyyF'

// _swift_isClassOrObjCExistentialType
sil @_swift_isClassOrObjCExistentialType : $@convention(thin) <0x1139b3a900_0> (@thick 0x1139b3a900_0.Type) -> Bool

// _fatalErrorMessage(_:_:file:line:flags:)
sil [noinline] [_semantics "programtermination_point"] @$ss18_fatalErrorMessage__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never

// _stdlib_isOSVersionAtLeast(_:_:_:)
sil [readnone] [_semantics "availability.osversion"] @$ss26_stdlib_isOSVersionAtLeastyBi1_Bw_BwBwtF : $@convention(thin) (Builtin.Word, Builtin.Word, Builtin.Word) -> Builtin.Int1

// swift_COWChecksEnabled
sil [available 9999] @swift_COWChecksEnabled : $@convention(thin) () -> Bool

// _swift_setImmutableCOWBuffer
sil [available 9999] @_swift_setImmutableCOWBuffer : $@convention(thin) (@guaranteed AnyObject, Bool) -> Bool

// specialized Array.count.getter
sil @$sSa5countSivgSS_Tg5 : $@convention(method) (@guaranteed Array<String>) -> Int

// specialized _allocateUninitializedArray<A>(_:)
sil [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlFyp_Tg5 : $@convention(thin) (Builtin.Word) -> (@owned Array<Any>, Builtin.RawPointer)

// specialized Array.subscript.getter
sil @$sSayxSicigSS_Tg5 : $@convention(method) (Int, @guaranteed Array<String>) -> @owned String

sil_witness_table public_external String: Equatable module Swift {
  method #Equatable."==": <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : @$sSSSQsSQ2eeoiySbx_xtFZTW	// protocol witness for static Equatable.== infix(_:_:) in conformance String
}

sil_witness_table public_external Int: Equatable module Swift {
  method #Equatable."==": <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : @$sSiSQsSQ2eeoiySbx_xtFZTW	// protocol witness for static Equatable.== infix(_:_:) in conformance Int
}



// Mappings from '#fileID' to '#filePath':
//   'main/main.swift' => '/Users/justinfargnoli/test/main.swift'


