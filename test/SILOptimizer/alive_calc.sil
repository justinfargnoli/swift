sil_stage lowered

import Builtin
import Swift
import SwiftShims

@_hasStorage @_hasInitialValue let operand1: Int { get }

@_hasStorage @_hasInitialValue let operand2: Int { get }

@_hasStorage @_hasInitialValue let op: String { get }

// operand1
sil_global hidden [let] @$s4main8operand1Sivp : $Int

// operand2
sil_global hidden [let] @$s4main8operand2Sivp : $Int

// op
sil_global hidden [let] @$s4main2opSSvp : $String

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = metatype $@thin Int.Type
  %3 = metatype $@thin CommandLine.Type           // user: %5
  // function_ref static CommandLine.arguments.getter
  %4 = function_ref @$ss11CommandLineO9argumentsSaySSGvgZ : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // users: %8, %7
  // function_ref Array.count.getter
  %6 = function_ref @$sSa5countSivg : $@convention(method) <0x10fa11ba80_0> (@guaranteed Array<0x10fa11ba80_0>) -> Int // user: %7
  %7 = apply %6<String>(%5) : $@convention(method) <0x10fa11ba80_0> (@guaranteed Array<0x10fa11ba80_0>) -> Int // user: %9
  release_value %5 : $Array<String>               // id: %8
  %9 = struct_extract %7 : $Int, #Int._value      // user: %11
  %10 = integer_literal $Builtin.Int64, 3         // user: %11
  %11 = builtin "cmp_eq_Int64"(%9 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1 // user: %13
  %12 = integer_literal $Builtin.Int1, -1         // user: %13
  %13 = builtin "xor_Int1"(%11 : $Builtin.Int1, %12 : $Builtin.Int1) : $Builtin.Int1 // user: %14
  cond_br %13, bb1, bb2                           // id: %14

bb1:                                              // Preds: bb0
  %15 = integer_literal $Builtin.Word, 1          // user: %17
  // function_ref _allocateUninitializedArray<A>(_:)
  %16 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // user: %17
  %17 = apply %16<Any>(%15) : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // users: %19, %18
  %18 = tuple_extract %17 : $(Array<Any>, Builtin.RawPointer), 0 // user: %30
  %19 = tuple_extract %17 : $(Array<Any>, Builtin.RawPointer), 1 // user: %20
  %20 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Any // user: %27
  %21 = string_literal utf8 "Usage: $ main <int> <op> <int>" // user: %26
  %22 = integer_literal $Builtin.Word, 30         // user: %26
  %23 = integer_literal $Builtin.Int1, -1         // user: %26
  %24 = metatype $@thin String.Type               // user: %26
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %25 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %26 = apply %25(%21, %22, %23, %24) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %27 = init_existential_addr %20 : $*Any, $String // user: %28
  store %26 to %27 : $*String                     // id: %28
  // function_ref _finalizeUninitializedArray<A>(_:)
  %29 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // user: %30
  %30 = apply %29<Any>(%18) : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // users: %39, %36
  // function_ref default argument 1 of print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %32
  %32 = apply %31() : $@convention(thin) () -> @owned String // users: %38, %36
  // function_ref default argument 2 of print(_:separator:terminator:)
  %33 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %34
  %34 = apply %33() : $@convention(thin) () -> @owned String // users: %37, %36
  // function_ref print(_:separator:terminator:)
  %35 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %36
  %36 = apply %35(%30, %32, %34) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %34 : $String                     // id: %37
  release_value %32 : $String                     // id: %38
  release_value %30 : $Array<Any>                 // id: %39
  %40 = integer_literal $Builtin.Word, 1          // user: %42
  // function_ref _allocateUninitializedArray<A>(_:)
  %41 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // user: %42
  %42 = apply %41<Any>(%40) : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // users: %44, %43
  %43 = tuple_extract %42 : $(Array<Any>, Builtin.RawPointer), 0 // user: %55
  %44 = tuple_extract %42 : $(Array<Any>, Builtin.RawPointer), 1 // user: %45
  %45 = pointer_to_address %44 : $Builtin.RawPointer to [strict] $*Any // user: %52
  %46 = string_literal utf8 "Ignore all further results." // user: %51
  %47 = integer_literal $Builtin.Word, 27         // user: %51
  %48 = integer_literal $Builtin.Int1, -1         // user: %51
  %49 = metatype $@thin String.Type               // user: %51
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %50 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %51
  %51 = apply %50(%46, %47, %48, %49) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %53
  %52 = init_existential_addr %45 : $*Any, $String // user: %53
  store %51 to %52 : $*String                     // id: %53
  // function_ref _finalizeUninitializedArray<A>(_:)
  %54 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // user: %55
  %55 = apply %54<Any>(%43) : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // users: %64, %61
  // function_ref default argument 1 of print(_:separator:terminator:)
  %56 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %57
  %57 = apply %56() : $@convention(thin) () -> @owned String // users: %63, %61
  // function_ref default argument 2 of print(_:separator:terminator:)
  %58 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %59
  %59 = apply %58() : $@convention(thin) () -> @owned String // users: %62, %61
  // function_ref print(_:separator:terminator:)
  %60 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %61
  %61 = apply %60(%55, %57, %59) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %59 : $String                     // id: %62
  release_value %57 : $String                     // id: %63
  release_value %55 : $Array<Any>                 // id: %64
  br bb3                                          // id: %65

bb2:                                              // Preds: bb0
  br bb3                                          // id: %66

bb3:                                              // Preds: bb2 bb1
  alloc_global @$s4main8operand1Sivp              // id: %67
  %68 = global_addr @$s4main8operand1Sivp : $*Int // users: %393, %310, %259, %208, %117
  %69 = alloc_stack $Optional<Int>                // users: %118, %85, %82
  %70 = metatype $@thin Int.Type
  %71 = metatype $@thick Int.Type                 // user: %82
  %72 = metatype $@thin CommandLine.Type          // user: %76
  %73 = integer_literal $Builtin.Int64, 0         // user: %74
  %74 = struct $Int (%73 : $Builtin.Int64)        // user: %79
  // function_ref static CommandLine.arguments.getter
  %75 = function_ref @$ss11CommandLineO9argumentsSaySSGvgZ : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // user: %76
  %76 = apply %75(%72) : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // users: %84, %79
  %77 = alloc_stack $String                       // users: %83, %80, %79
  // function_ref Array.subscript.getter
  %78 = function_ref @$sSayxSicig : $@convention(method) <0x10fa11ba80_0> (Int, @guaranteed Array<0x10fa11ba80_0>) -> @out 0x10fa11ba80_0 // user: %79
  %79 = apply %78<String>(%77, %74, %76) : $@convention(method) <0x10fa11ba80_0> (Int, @guaranteed Array<0x10fa11ba80_0>) -> @out 0x10fa11ba80_0
  %80 = load %77 : $*String                       // user: %82
  // function_ref FixedWidthInteger.init(_:)
  %81 = function_ref @$ss17FixedWidthIntegerPsEyxSgSScfC : $@convention(method) <0x10fa11ba80_0 where 0x10fa11ba80_0 : FixedWidthInteger> (@owned String, @thick 0x10fa11ba80_0.Type) -> @out Optional<0x10fa11ba80_0> // user: %82
  %82 = apply %81<Int>(%69, %80, %71) : $@convention(method) <0x10fa11ba80_0 where 0x10fa11ba80_0 : FixedWidthInteger> (@owned String, @thick 0x10fa11ba80_0.Type) -> @out Optional<0x10fa11ba80_0>
  dealloc_stack %77 : $*String                    // id: %83
  release_value %76 : $Array<String>              // id: %84
  %85 = load %69 : $*Optional<Int>                // user: %86
  switch_enum %85 : $Optional<Int>, case #Optional.some!enumelt: bb11, case #Optional.none!enumelt: bb4 // id: %86

bb4:                                              // Preds: bb3
  %87 = string_literal utf8 "main/main.swift"     // user: %96
  %88 = integer_literal $Builtin.Word, 15         // user: %100
  %89 = integer_literal $Builtin.Word, 45
  br bb5                                          // id: %90

bb5:                                              // Preds: bb4
  %91 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value" // user: %93
  %92 = integer_literal $Builtin.Word, 57         // user: %95
  %93 = builtin "ptrtoint_Word"(%91 : $Builtin.RawPointer) : $Builtin.Word // user: %95
  %94 = integer_literal $Builtin.Int8, 2          // user: %95
  %95 = struct $StaticString (%93 : $Builtin.Word, %92 : $Builtin.Word, %94 : $Builtin.Int8) // user: %114
  %96 = builtin "ptrtoint_Word"(%87 : $Builtin.RawPointer) : $Builtin.Word // user: %100
  br bb6                                          // id: %97

bb6:                                              // Preds: bb5
  %98 = integer_literal $Builtin.Int8, 2          // user: %100
  br bb7                                          // id: %99

bb7:                                              // Preds: bb6
  %100 = struct $StaticString (%96 : $Builtin.Word, %88 : $Builtin.Word, %98 : $Builtin.Int8) // user: %114
  %101 = integer_literal $Builtin.Int64, 6        // user: %102
  %102 = struct $UInt (%101 : $Builtin.Int64)     // user: %114
  br bb8                                          // id: %103

bb8:                                              // Preds: bb7
  %104 = string_literal utf8 "Fatal error"        // user: %106
  %105 = integer_literal $Builtin.Word, 11        // user: %108
  %106 = builtin "ptrtoint_Word"(%104 : $Builtin.RawPointer) : $Builtin.Word // user: %108
  %107 = integer_literal $Builtin.Int8, 2         // user: %108
  %108 = struct $StaticString (%106 : $Builtin.Word, %105 : $Builtin.Word, %107 : $Builtin.Int8) // user: %114
  br bb9                                          // id: %109

bb9:                                              // Preds: bb8
  %110 = integer_literal $Builtin.Int32, 1        // user: %111
  %111 = struct $UInt32 (%110 : $Builtin.Int32)   // user: %114
  br bb10                                         // id: %112

bb10:                                             // Preds: bb9
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %113 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %114
  %114 = apply %113(%108, %95, %100, %102, %111) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %115

// %116                                           // user: %117
bb11(%116 : $Int):                                // Preds: bb3
  store %116 to %68 : $*Int                       // id: %117
  dealloc_stack %69 : $*Optional<Int>             // id: %118
  alloc_global @$s4main8operand2Sivp              // id: %119
  %120 = global_addr @$s4main8operand2Sivp : $*Int // users: %394, %355, %311, %260, %209, %169
  %121 = alloc_stack $Optional<Int>               // users: %170, %137, %134
  %122 = metatype $@thin Int.Type
  %123 = metatype $@thick Int.Type                // user: %134
  %124 = metatype $@thin CommandLine.Type         // user: %128
  %125 = integer_literal $Builtin.Int64, 2        // user: %126
  %126 = struct $Int (%125 : $Builtin.Int64)      // user: %131
  // function_ref static CommandLine.arguments.getter
  %127 = function_ref @$ss11CommandLineO9argumentsSaySSGvgZ : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // user: %128
  %128 = apply %127(%124) : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // users: %136, %131
  %129 = alloc_stack $String                      // users: %135, %132, %131
  // function_ref Array.subscript.getter
  %130 = function_ref @$sSayxSicig : $@convention(method) <0x10fa11ba80_0> (Int, @guaranteed Array<0x10fa11ba80_0>) -> @out 0x10fa11ba80_0 // user: %131
  %131 = apply %130<String>(%129, %126, %128) : $@convention(method) <0x10fa11ba80_0> (Int, @guaranteed Array<0x10fa11ba80_0>) -> @out 0x10fa11ba80_0
  %132 = load %129 : $*String                     // user: %134
  // function_ref FixedWidthInteger.init(_:)
  %133 = function_ref @$ss17FixedWidthIntegerPsEyxSgSScfC : $@convention(method) <0x10fa11ba80_0 where 0x10fa11ba80_0 : FixedWidthInteger> (@owned String, @thick 0x10fa11ba80_0.Type) -> @out Optional<0x10fa11ba80_0> // user: %134
  %134 = apply %133<Int>(%121, %132, %123) : $@convention(method) <0x10fa11ba80_0 where 0x10fa11ba80_0 : FixedWidthInteger> (@owned String, @thick 0x10fa11ba80_0.Type) -> @out Optional<0x10fa11ba80_0>
  dealloc_stack %129 : $*String                   // id: %135
  release_value %128 : $Array<String>             // id: %136
  %137 = load %121 : $*Optional<Int>              // user: %138
  switch_enum %137 : $Optional<Int>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb12 // id: %138

bb12:                                             // Preds: bb11
  %139 = string_literal utf8 "main/main.swift"    // user: %148
  %140 = integer_literal $Builtin.Word, 15        // user: %152
  %141 = integer_literal $Builtin.Word, 45
  br bb13                                         // id: %142

bb13:                                             // Preds: bb12
  %143 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value" // user: %145
  %144 = integer_literal $Builtin.Word, 57        // user: %147
  %145 = builtin "ptrtoint_Word"(%143 : $Builtin.RawPointer) : $Builtin.Word // user: %147
  %146 = integer_literal $Builtin.Int8, 2         // user: %147
  %147 = struct $StaticString (%145 : $Builtin.Word, %144 : $Builtin.Word, %146 : $Builtin.Int8) // user: %166
  %148 = builtin "ptrtoint_Word"(%139 : $Builtin.RawPointer) : $Builtin.Word // user: %152
  br bb14                                         // id: %149

bb14:                                             // Preds: bb13
  %150 = integer_literal $Builtin.Int8, 2         // user: %152
  br bb15                                         // id: %151

bb15:                                             // Preds: bb14
  %152 = struct $StaticString (%148 : $Builtin.Word, %140 : $Builtin.Word, %150 : $Builtin.Int8) // user: %166
  %153 = integer_literal $Builtin.Int64, 7        // user: %154
  %154 = struct $UInt (%153 : $Builtin.Int64)     // user: %166
  br bb16                                         // id: %155

bb16:                                             // Preds: bb15
  %156 = string_literal utf8 "Fatal error"        // user: %158
  %157 = integer_literal $Builtin.Word, 11        // user: %160
  %158 = builtin "ptrtoint_Word"(%156 : $Builtin.RawPointer) : $Builtin.Word // user: %160
  %159 = integer_literal $Builtin.Int8, 2         // user: %160
  %160 = struct $StaticString (%158 : $Builtin.Word, %157 : $Builtin.Word, %159 : $Builtin.Int8) // user: %166
  br bb17                                         // id: %161

bb17:                                             // Preds: bb16
  %162 = integer_literal $Builtin.Int32, 1        // user: %163
  %163 = struct $UInt32 (%162 : $Builtin.Int32)   // user: %166
  br bb18                                         // id: %164

bb18:                                             // Preds: bb17
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %165 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %166
  %166 = apply %165(%160, %147, %152, %154, %163) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %167

// %168                                           // user: %169
bb19(%168 : $Int):                                // Preds: bb11
  store %168 to %120 : $*Int                      // id: %169
  dealloc_stack %121 : $*Optional<Int>            // id: %170
  alloc_global @$s4main2opSSvp                    // id: %171
  %172 = global_addr @$s4main2opSSvp : $*String   // users: %510, %181, %179
  %173 = metatype $@thin CommandLine.Type         // user: %177
  %174 = integer_literal $Builtin.Int64, 1        // user: %175
  %175 = struct $Int (%174 : $Builtin.Int64)      // user: %179
  // function_ref static CommandLine.arguments.getter
  %176 = function_ref @$ss11CommandLineO9argumentsSaySSGvgZ : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // user: %177
  %177 = apply %176(%173) : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String> // users: %180, %179
  // function_ref Array.subscript.getter
  %178 = function_ref @$sSayxSicig : $@convention(method) <0x10fa11ba80_0> (Int, @guaranteed Array<0x10fa11ba80_0>) -> @out 0x10fa11ba80_0 // user: %179
  %179 = apply %178<String>(%172, %175, %177) : $@convention(method) <0x10fa11ba80_0> (Int, @guaranteed Array<0x10fa11ba80_0>) -> @out 0x10fa11ba80_0
  release_value %177 : $Array<String>             // id: %180
  %181 = load %172 : $*String                     // users: %483, %354, %344, %335, %334, %303, %293, %284, %283, %252, %242, %233, %232, %201, %191, %182
  retain_value %181 : $String                     // id: %182
  %183 = string_literal utf8 "+"                  // user: %188
  %184 = integer_literal $Builtin.Word, 1         // user: %188
  %185 = integer_literal $Builtin.Int1, -1        // user: %188
  %186 = metatype $@thin String.Type              // user: %188
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %187 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %188
  %188 = apply %187(%183, %184, %185, %186) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %198, %196, %195, %189
  retain_value %188 : $String                     // id: %189
  %190 = alloc_stack $String                      // users: %197, %192, %191
  store %181 to %190 : $*String                   // id: %191
  %192 = load %190 : $*String                     // user: %195
  %193 = metatype $@thin String.Type              // user: %195
  // function_ref static String.== infix(_:_:)
  %194 = function_ref @$sSS2eeoiySbSS_SStFZ : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %195
  %195 = apply %194(%188, %192, %193) : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %199
  release_value %188 : $String                    // id: %196
  dealloc_stack %190 : $*String                   // id: %197
  release_value %188 : $String                    // id: %198
  %199 = struct_extract %195 : $Bool, #Bool._value // user: %200
  cond_br %199, bb20, bb21                        // id: %200

bb20:                                             // Preds: bb19
  release_value %181 : $String                    // id: %201
  %202 = integer_literal $Builtin.Word, 1         // user: %204
  // function_ref _allocateUninitializedArray<A>(_:)
  %203 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // user: %204
  %204 = apply %203<Any>(%202) : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // users: %206, %205
  %205 = tuple_extract %204 : $(Array<Any>, Builtin.RawPointer), 0 // user: %221
  %206 = tuple_extract %204 : $(Array<Any>, Builtin.RawPointer), 1 // user: %207
  %207 = pointer_to_address %206 : $Builtin.RawPointer to [strict] $*Any // user: %218
  %208 = load %68 : $*Int                         // user: %210
  %209 = load %120 : $*Int                        // user: %211
  %210 = struct_extract %208 : $Int, #Int._value  // user: %213
  %211 = struct_extract %209 : $Int, #Int._value  // user: %213
  %212 = integer_literal $Builtin.Int1, -1        // user: %213
  %213 = builtin "sadd_with_overflow_Int64"(%210 : $Builtin.Int64, %211 : $Builtin.Int64, %212 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %215, %214
  %214 = tuple_extract %213 : $(Builtin.Int64, Builtin.Int1), 0 // user: %217
  %215 = tuple_extract %213 : $(Builtin.Int64, Builtin.Int1), 1 // user: %216
  cond_fail %215 : $Builtin.Int1, "arithmetic overflow" // id: %216
  %217 = struct $Int (%214 : $Builtin.Int64)      // user: %219
  %218 = init_existential_addr %207 : $*Any, $Int // user: %219
  store %217 to %218 : $*Int                      // id: %219
  // function_ref _finalizeUninitializedArray<A>(_:)
  %220 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // user: %221
  %221 = apply %220<Any>(%205) : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // users: %230, %227
  // function_ref default argument 1 of print(_:separator:terminator:)
  %222 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %223
  %223 = apply %222() : $@convention(thin) () -> @owned String // users: %229, %227
  // function_ref default argument 2 of print(_:separator:terminator:)
  %224 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %225
  %225 = apply %224() : $@convention(thin) () -> @owned String // users: %228, %227
  // function_ref print(_:separator:terminator:)
  %226 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %227
  %227 = apply %226(%221, %223, %225) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %225 : $String                    // id: %228
  release_value %223 : $String                    // id: %229
  release_value %221 : $Array<Any>                // id: %230
  br bb44                                         // id: %231

bb21:                                             // Preds: bb19
  release_value %181 : $String                    // id: %232
  retain_value %181 : $String                     // id: %233
  %234 = string_literal utf8 "-"                  // user: %239
  %235 = integer_literal $Builtin.Word, 1         // user: %239
  %236 = integer_literal $Builtin.Int1, -1        // user: %239
  %237 = metatype $@thin String.Type              // user: %239
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %238 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %239
  %239 = apply %238(%234, %235, %236, %237) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %249, %247, %246, %240
  retain_value %239 : $String                     // id: %240
  %241 = alloc_stack $String                      // users: %248, %243, %242
  store %181 to %241 : $*String                   // id: %242
  %243 = load %241 : $*String                     // user: %246
  %244 = metatype $@thin String.Type              // user: %246
  // function_ref static String.== infix(_:_:)
  %245 = function_ref @$sSS2eeoiySbSS_SStFZ : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %246
  %246 = apply %245(%239, %243, %244) : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %250
  release_value %239 : $String                    // id: %247
  dealloc_stack %241 : $*String                   // id: %248
  release_value %239 : $String                    // id: %249
  %250 = struct_extract %246 : $Bool, #Bool._value // user: %251
  cond_br %250, bb22, bb23                        // id: %251

bb22:                                             // Preds: bb21
  release_value %181 : $String                    // id: %252
  %253 = integer_literal $Builtin.Word, 1         // user: %255
  // function_ref _allocateUninitializedArray<A>(_:)
  %254 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // user: %255
  %255 = apply %254<Any>(%253) : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // users: %257, %256
  %256 = tuple_extract %255 : $(Array<Any>, Builtin.RawPointer), 0 // user: %272
  %257 = tuple_extract %255 : $(Array<Any>, Builtin.RawPointer), 1 // user: %258
  %258 = pointer_to_address %257 : $Builtin.RawPointer to [strict] $*Any // user: %269
  %259 = load %68 : $*Int                         // user: %261
  %260 = load %120 : $*Int                        // user: %262
  %261 = struct_extract %259 : $Int, #Int._value  // user: %264
  %262 = struct_extract %260 : $Int, #Int._value  // user: %264
  %263 = integer_literal $Builtin.Int1, -1        // user: %264
  %264 = builtin "ssub_with_overflow_Int64"(%261 : $Builtin.Int64, %262 : $Builtin.Int64, %263 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %266, %265
  %265 = tuple_extract %264 : $(Builtin.Int64, Builtin.Int1), 0 // user: %268
  %266 = tuple_extract %264 : $(Builtin.Int64, Builtin.Int1), 1 // user: %267
  cond_fail %266 : $Builtin.Int1, "arithmetic overflow" // id: %267
  %268 = struct $Int (%265 : $Builtin.Int64)      // user: %270
  %269 = init_existential_addr %258 : $*Any, $Int // user: %270
  store %268 to %269 : $*Int                      // id: %270
  // function_ref _finalizeUninitializedArray<A>(_:)
  %271 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // user: %272
  %272 = apply %271<Any>(%256) : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // users: %281, %278
  // function_ref default argument 1 of print(_:separator:terminator:)
  %273 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %274
  %274 = apply %273() : $@convention(thin) () -> @owned String // users: %280, %278
  // function_ref default argument 2 of print(_:separator:terminator:)
  %275 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %276
  %276 = apply %275() : $@convention(thin) () -> @owned String // users: %279, %278
  // function_ref print(_:separator:terminator:)
  %277 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %278
  %278 = apply %277(%272, %274, %276) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %276 : $String                    // id: %279
  release_value %274 : $String                    // id: %280
  release_value %272 : $Array<Any>                // id: %281
  br bb44                                         // id: %282

bb23:                                             // Preds: bb21
  release_value %181 : $String                    // id: %283
  retain_value %181 : $String                     // id: %284
  %285 = string_literal utf8 "*"                  // user: %290
  %286 = integer_literal $Builtin.Word, 1         // user: %290
  %287 = integer_literal $Builtin.Int1, -1        // user: %290
  %288 = metatype $@thin String.Type              // user: %290
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %289 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %290
  %290 = apply %289(%285, %286, %287, %288) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %300, %298, %297, %291
  retain_value %290 : $String                     // id: %291
  %292 = alloc_stack $String                      // users: %299, %294, %293
  store %181 to %292 : $*String                   // id: %293
  %294 = load %292 : $*String                     // user: %297
  %295 = metatype $@thin String.Type              // user: %297
  // function_ref static String.== infix(_:_:)
  %296 = function_ref @$sSS2eeoiySbSS_SStFZ : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %297
  %297 = apply %296(%290, %294, %295) : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %301
  release_value %290 : $String                    // id: %298
  dealloc_stack %292 : $*String                   // id: %299
  release_value %290 : $String                    // id: %300
  %301 = struct_extract %297 : $Bool, #Bool._value // user: %302
  cond_br %301, bb24, bb25                        // id: %302

bb24:                                             // Preds: bb23
  release_value %181 : $String                    // id: %303
  %304 = integer_literal $Builtin.Word, 1         // user: %306
  // function_ref _allocateUninitializedArray<A>(_:)
  %305 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // user: %306
  %306 = apply %305<Any>(%304) : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // users: %308, %307
  %307 = tuple_extract %306 : $(Array<Any>, Builtin.RawPointer), 0 // user: %323
  %308 = tuple_extract %306 : $(Array<Any>, Builtin.RawPointer), 1 // user: %309
  %309 = pointer_to_address %308 : $Builtin.RawPointer to [strict] $*Any // user: %320
  %310 = load %68 : $*Int                         // user: %312
  %311 = load %120 : $*Int                        // user: %313
  %312 = struct_extract %310 : $Int, #Int._value  // user: %315
  %313 = struct_extract %311 : $Int, #Int._value  // user: %315
  %314 = integer_literal $Builtin.Int1, -1        // user: %315
  %315 = builtin "smul_with_overflow_Int64"(%312 : $Builtin.Int64, %313 : $Builtin.Int64, %314 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %317, %316
  %316 = tuple_extract %315 : $(Builtin.Int64, Builtin.Int1), 0 // user: %319
  %317 = tuple_extract %315 : $(Builtin.Int64, Builtin.Int1), 1 // user: %318
  cond_fail %317 : $Builtin.Int1, "arithmetic overflow" // id: %318
  %319 = struct $Int (%316 : $Builtin.Int64)      // user: %321
  %320 = init_existential_addr %309 : $*Any, $Int // user: %321
  store %319 to %320 : $*Int                      // id: %321
  // function_ref _finalizeUninitializedArray<A>(_:)
  %322 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // user: %323
  %323 = apply %322<Any>(%307) : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // users: %332, %329
  // function_ref default argument 1 of print(_:separator:terminator:)
  %324 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %325
  %325 = apply %324() : $@convention(thin) () -> @owned String // users: %331, %329
  // function_ref default argument 2 of print(_:separator:terminator:)
  %326 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %327
  %327 = apply %326() : $@convention(thin) () -> @owned String // users: %330, %329
  // function_ref print(_:separator:terminator:)
  %328 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %329
  %329 = apply %328(%323, %325, %327) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %327 : $String                    // id: %330
  release_value %325 : $String                    // id: %331
  release_value %323 : $Array<Any>                // id: %332
  br bb44                                         // id: %333

bb25:                                             // Preds: bb23
  release_value %181 : $String                    // id: %334
  retain_value %181 : $String                     // id: %335
  %336 = string_literal utf8 "/"                  // user: %341
  %337 = integer_literal $Builtin.Word, 1         // user: %341
  %338 = integer_literal $Builtin.Int1, -1        // user: %341
  %339 = metatype $@thin String.Type              // user: %341
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %340 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %341
  %341 = apply %340(%336, %337, %338, %339) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %351, %349, %348, %342
  retain_value %341 : $String                     // id: %342
  %343 = alloc_stack $String                      // users: %350, %345, %344
  store %181 to %343 : $*String                   // id: %344
  %345 = load %343 : $*String                     // user: %348
  %346 = metatype $@thin String.Type              // user: %348
  // function_ref static String.== infix(_:_:)
  %347 = function_ref @$sSS2eeoiySbSS_SStFZ : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %348
  %348 = apply %347(%341, %345, %346) : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %352
  release_value %341 : $String                    // id: %349
  dealloc_stack %343 : $*String                   // id: %350
  release_value %341 : $String                    // id: %351
  %352 = struct_extract %348 : $Bool, #Bool._value // user: %353
  cond_br %352, bb26, bb43                        // id: %353

bb26:                                             // Preds: bb25
  release_value %181 : $String                    // id: %354
  %355 = load %120 : $*Int                        // user: %357
  %356 = integer_literal $Builtin.Int64, 0        // user: %358
  %357 = struct_extract %355 : $Int, #Int._value  // user: %358
  %358 = builtin "cmp_eq_Int64"(%357 : $Builtin.Int64, %356 : $Builtin.Int64) : $Builtin.Int1 // user: %359
  cond_br %358, bb27, bb28                        // id: %359

bb27:                                             // Preds: bb26
  %360 = integer_literal $Builtin.Word, 1         // user: %362
  // function_ref _allocateUninitializedArray<A>(_:)
  %361 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // user: %362
  %362 = apply %361<Any>(%360) : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // users: %364, %363
  %363 = tuple_extract %362 : $(Array<Any>, Builtin.RawPointer), 0 // user: %375
  %364 = tuple_extract %362 : $(Array<Any>, Builtin.RawPointer), 1 // user: %365
  %365 = pointer_to_address %364 : $Builtin.RawPointer to [strict] $*Any // user: %372
  %366 = string_literal utf8 "ERROR: operand2 being 0 causes a division by 0 error" // user: %371
  %367 = integer_literal $Builtin.Word, 52        // user: %371
  %368 = integer_literal $Builtin.Int1, -1        // user: %371
  %369 = metatype $@thin String.Type              // user: %371
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %370 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %371
  %371 = apply %370(%366, %367, %368, %369) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %373
  %372 = init_existential_addr %365 : $*Any, $String // user: %373
  store %371 to %372 : $*String                   // id: %373
  // function_ref _finalizeUninitializedArray<A>(_:)
  %374 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // user: %375
  %375 = apply %374<Any>(%363) : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // users: %384, %381
  // function_ref default argument 1 of print(_:separator:terminator:)
  %376 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %377
  %377 = apply %376() : $@convention(thin) () -> @owned String // users: %383, %381
  // function_ref default argument 2 of print(_:separator:terminator:)
  %378 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %379
  %379 = apply %378() : $@convention(thin) () -> @owned String // users: %382, %381
  // function_ref print(_:separator:terminator:)
  %380 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %381
  %381 = apply %380(%375, %377, %379) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %379 : $String                    // id: %382
  release_value %377 : $String                    // id: %383
  release_value %375 : $Array<Any>                // id: %384
  br bb29                                         // id: %385

bb28:                                             // Preds: bb26
  br bb29                                         // id: %386

bb29:                                             // Preds: bb28 bb27
  %387 = integer_literal $Builtin.Word, 1         // user: %389
  // function_ref _allocateUninitializedArray<A>(_:)
  %388 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // user: %389
  %389 = apply %388<Any>(%387) : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // users: %391, %390
  %390 = tuple_extract %389 : $(Array<Any>, Builtin.RawPointer), 0 // user: %460
  %391 = tuple_extract %389 : $(Array<Any>, Builtin.RawPointer), 1 // user: %392
  %392 = pointer_to_address %391 : $Builtin.RawPointer to [strict] $*Any // user: %457
  %393 = load %68 : $*Int                         // users: %416, %395
  %394 = load %120 : $*Int                        // users: %454, %432, %397
  %395 = struct_extract %393 : $Int, #Int._value  // user: %455
  %396 = integer_literal $Builtin.Int64, 0        // user: %398
  %397 = struct_extract %394 : $Int, #Int._value  // user: %398
  %398 = builtin "cmp_eq_Int64"(%397 : $Builtin.Int64, %396 : $Builtin.Int64) : $Builtin.Int1 // user: %400
  %399 = integer_literal $Builtin.Int1, 0         // user: %400
  %400 = builtin "int_expect_Int1"(%398 : $Builtin.Int1, %399 : $Builtin.Int1) : $Builtin.Int1 // user: %401
  cond_br %400, bb30, bb31                        // id: %401

bb30:                                             // Preds: bb29
  %402 = string_literal utf8 "Division by zero"   // user: %404
  %403 = integer_literal $Builtin.Word, 16        // user: %406
  %404 = builtin "ptrtoint_Word"(%402 : $Builtin.RawPointer) : $Builtin.Word // user: %406
  %405 = integer_literal $Builtin.Int8, 2         // user: %406
  %406 = struct $StaticString (%404 : $Builtin.Word, %403 : $Builtin.Word, %405 : $Builtin.Int8) // user: %429
  %407 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface" // user: %409
  %408 = integer_literal $Builtin.Word, 39        // user: %411
  %409 = builtin "ptrtoint_Word"(%407 : $Builtin.RawPointer) : $Builtin.Word // user: %411
  %410 = integer_literal $Builtin.Int8, 2         // user: %411
  %411 = struct $StaticString (%409 : $Builtin.Word, %408 : $Builtin.Word, %410 : $Builtin.Int8) // user: %429
  %412 = integer_literal $Builtin.Int64, 31711    // user: %413
  %413 = struct $UInt (%412 : $Builtin.Int64)     // user: %429
  br bb32                                         // id: %414

bb31:                                             // Preds: bb29
  %415 = integer_literal $Builtin.Int64, -9223372036854775808 // user: %417
  %416 = struct_extract %393 : $Int, #Int._value  // user: %417
  %417 = builtin "cmp_eq_Int64"(%416 : $Builtin.Int64, %415 : $Builtin.Int64) : $Builtin.Int1 // user: %418
  cond_br %417, bb35, bb36                        // id: %418

bb32:                                             // Preds: bb30
  %419 = string_literal utf8 "Fatal error"        // user: %421
  %420 = integer_literal $Builtin.Word, 11        // user: %423
  %421 = builtin "ptrtoint_Word"(%419 : $Builtin.RawPointer) : $Builtin.Word // user: %423
  %422 = integer_literal $Builtin.Int8, 2         // user: %423
  %423 = struct $StaticString (%421 : $Builtin.Word, %420 : $Builtin.Word, %422 : $Builtin.Int8) // user: %429
  br bb33                                         // id: %424

bb33:                                             // Preds: bb32
  %425 = integer_literal $Builtin.Int32, 1        // user: %426
  %426 = struct $UInt32 (%425 : $Builtin.Int32)   // user: %429
  br bb34                                         // id: %427

bb34:                                             // Preds: bb33
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %428 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %429
  %429 = apply %428(%423, %406, %411, %413, %426) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %430

bb35:                                             // Preds: bb31
  %431 = integer_literal $Builtin.Int64, -1       // user: %433
  %432 = struct_extract %394 : $Int, #Int._value  // user: %433
  %433 = builtin "cmp_eq_Int64"(%432 : $Builtin.Int64, %431 : $Builtin.Int64) : $Builtin.Int1 // user: %434
  br bb37(%433 : $Builtin.Int1)                   // id: %434

bb36:                                             // Preds: bb31
  %435 = integer_literal $Builtin.Int1, 0         // user: %436
  br bb37(%435 : $Builtin.Int1)                   // id: %436

// %437                                           // user: %439
bb37(%437 : $Builtin.Int1):                       // Preds: bb36 bb35
  %438 = integer_literal $Builtin.Int1, 0         // user: %439
  %439 = builtin "int_expect_Int1"(%437 : $Builtin.Int1, %438 : $Builtin.Int1) : $Builtin.Int1 // user: %440
  cond_br %439, bb38, bb39                        // id: %440

bb38:                                             // Preds: bb37
  %441 = string_literal utf8 "Division results in an overflow" // user: %443
  %442 = integer_literal $Builtin.Word, 31        // user: %445
  %443 = builtin "ptrtoint_Word"(%441 : $Builtin.RawPointer) : $Builtin.Word // user: %445
  %444 = integer_literal $Builtin.Int8, 2         // user: %445
  %445 = struct $StaticString (%443 : $Builtin.Word, %442 : $Builtin.Word, %444 : $Builtin.Int8) // user: %481
  %446 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface" // user: %448
  %447 = integer_literal $Builtin.Word, 39        // user: %450
  %448 = builtin "ptrtoint_Word"(%446 : $Builtin.RawPointer) : $Builtin.Word // user: %450
  %449 = integer_literal $Builtin.Int8, 2         // user: %450
  %450 = struct $StaticString (%448 : $Builtin.Word, %447 : $Builtin.Word, %449 : $Builtin.Int8) // user: %481
  %451 = integer_literal $Builtin.Int64, 31718    // user: %452
  %452 = struct $UInt (%451 : $Builtin.Int64)     // user: %481
  br bb40                                         // id: %453

bb39:                                             // Preds: bb37
  %454 = struct_extract %394 : $Int, #Int._value  // user: %455
  %455 = builtin "sdiv_Int64"(%395 : $Builtin.Int64, %454 : $Builtin.Int64) : $Builtin.Int64 // user: %456
  %456 = struct $Int (%455 : $Builtin.Int64)      // user: %458
  %457 = init_existential_addr %392 : $*Any, $Int // user: %458
  store %456 to %457 : $*Int                      // id: %458
  // function_ref _finalizeUninitializedArray<A>(_:)
  %459 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // user: %460
  %460 = apply %459<Any>(%390) : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // users: %469, %466
  // function_ref default argument 1 of print(_:separator:terminator:)
  %461 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %462
  %462 = apply %461() : $@convention(thin) () -> @owned String // users: %468, %466
  // function_ref default argument 2 of print(_:separator:terminator:)
  %463 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %464
  %464 = apply %463() : $@convention(thin) () -> @owned String // users: %467, %466
  // function_ref print(_:separator:terminator:)
  %465 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %466
  %466 = apply %465(%460, %462, %464) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %464 : $String                    // id: %467
  release_value %462 : $String                    // id: %468
  release_value %460 : $Array<Any>                // id: %469
  br bb44                                         // id: %470

bb40:                                             // Preds: bb38
  %471 = string_literal utf8 "Fatal error"        // user: %473
  %472 = integer_literal $Builtin.Word, 11        // user: %475
  %473 = builtin "ptrtoint_Word"(%471 : $Builtin.RawPointer) : $Builtin.Word // user: %475
  %474 = integer_literal $Builtin.Int8, 2         // user: %475
  %475 = struct $StaticString (%473 : $Builtin.Word, %472 : $Builtin.Word, %474 : $Builtin.Int8) // user: %481
  br bb41                                         // id: %476

bb41:                                             // Preds: bb40
  %477 = integer_literal $Builtin.Int32, 1        // user: %478
  %478 = struct $UInt32 (%477 : $Builtin.Int32)   // user: %481
  br bb42                                         // id: %479

bb42:                                             // Preds: bb41
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %480 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %481
  %481 = apply %480(%475, %445, %450, %452, %478) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %482

bb43:                                             // Preds: bb25
  release_value %181 : $String                    // id: %483
  %484 = integer_literal $Builtin.Word, 1         // user: %486
  // function_ref _allocateUninitializedArray<A>(_:)
  %485 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // user: %486
  %486 = apply %485<Any>(%484) : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer) // users: %488, %487
  %487 = tuple_extract %486 : $(Array<Any>, Builtin.RawPointer), 0 // user: %539
  %488 = tuple_extract %486 : $(Array<Any>, Builtin.RawPointer), 1 // user: %489
  %489 = pointer_to_address %488 : $Builtin.RawPointer to [strict] $*Any // user: %536
  %490 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %532, %531, %529, %524, %513, %505, %498
  %491 = integer_literal $Builtin.Int64, 37       // user: %492
  %492 = struct $Int (%491 : $Builtin.Int64)      // user: %497
  %493 = integer_literal $Builtin.Int64, 1        // user: %494
  %494 = struct $Int (%493 : $Builtin.Int64)      // user: %497
  %495 = metatype $@thin DefaultStringInterpolation.Type // user: %497
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %496 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %497
  %497 = apply %496(%492, %494, %495) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %498
  store %497 to %490 : $*DefaultStringInterpolation // id: %498
  %499 = string_literal utf8 "ERROR: \""          // user: %504
  %500 = integer_literal $Builtin.Word, 8         // user: %504
  %501 = integer_literal $Builtin.Int1, -1        // user: %504
  %502 = metatype $@thin String.Type              // user: %504
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %503 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %504
  %504 = apply %503(%499, %500, %501, %502) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %509, %507
  %505 = begin_access [modify] [static] %490 : $*DefaultStringInterpolation // users: %508, %507
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %506 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %507
  %507 = apply %506(%504, %505) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %505 : $*DefaultStringInterpolation  // id: %508
  release_value %504 : $String                    // id: %509
  %510 = load %172 : $*String                     // user: %512
  %511 = alloc_stack $String                      // users: %517, %515, %512
  store %510 to %511 : $*String                   // id: %512
  %513 = begin_access [modify] [static] %490 : $*DefaultStringInterpolation // users: %516, %515
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %514 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <0x10fa11ba80_0 where 0x10fa11ba80_0 : CustomStringConvertible, 0x10fa11ba80_0 : TextOutputStreamable> (@in_guaranteed 0x10fa11ba80_0, @inout DefaultStringInterpolation) -> () // user: %515
  %515 = apply %514<String>(%511, %513) : $@convention(method) <0x10fa11ba80_0 where 0x10fa11ba80_0 : CustomStringConvertible, 0x10fa11ba80_0 : TextOutputStreamable> (@in_guaranteed 0x10fa11ba80_0, @inout DefaultStringInterpolation) -> ()
  end_access %513 : $*DefaultStringInterpolation  // id: %516
  dealloc_stack %511 : $*String                   // id: %517
  %518 = string_literal utf8 "\" is not a supported operator" // user: %523
  %519 = integer_literal $Builtin.Word, 29        // user: %523
  %520 = integer_literal $Builtin.Int1, -1        // user: %523
  %521 = metatype $@thin String.Type              // user: %523
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %522 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %523
  %523 = apply %522(%518, %519, %520, %521) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %528, %526
  %524 = begin_access [modify] [static] %490 : $*DefaultStringInterpolation // users: %527, %526
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %525 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %526
  %526 = apply %525(%523, %524) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %524 : $*DefaultStringInterpolation  // id: %527
  release_value %523 : $String                    // id: %528
  %529 = load %490 : $*DefaultStringInterpolation // users: %535, %530
  retain_value %529 : $DefaultStringInterpolation // id: %530
  destroy_addr %490 : $*DefaultStringInterpolation // id: %531
  dealloc_stack %490 : $*DefaultStringInterpolation // id: %532
  %533 = metatype $@thin String.Type              // user: %535
  // function_ref String.init(stringInterpolation:)
  %534 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %535
  %535 = apply %534(%529, %533) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %537
  %536 = init_existential_addr %489 : $*Any, $String // user: %537
  store %535 to %536 : $*String                   // id: %537
  // function_ref _finalizeUninitializedArray<A>(_:)
  %538 = function_ref @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // user: %539
  %539 = apply %538<Any>(%487) : $@convention(thin) <0x10fa11ba80_0> (@owned Array<0x10fa11ba80_0>) -> @owned Array<0x10fa11ba80_0> // users: %548, %545
  // function_ref default argument 1 of print(_:separator:terminator:)
  %540 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %541
  %541 = apply %540() : $@convention(thin) () -> @owned String // users: %547, %545
  // function_ref default argument 2 of print(_:separator:terminator:)
  %542 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %543
  %543 = apply %542() : $@convention(thin) () -> @owned String // users: %546, %545
  // function_ref print(_:separator:terminator:)
  %544 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %545
  %545 = apply %544(%539, %541, %543) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %543 : $String                    // id: %546
  release_value %541 : $String                    // id: %547
  release_value %539 : $Array<Any>                // id: %548
  br bb44                                         // id: %549

bb44:                                             // Preds: bb43 bb39 bb24 bb22 bb20
  %550 = integer_literal $Builtin.Int32, 0        // user: %551
  %551 = struct $Int32 (%550 : $Builtin.Int32)    // user: %552
  return %551 : $Int32                            // id: %552
} // end sil function 'main'

// static CommandLine.arguments.getter
sil @$ss11CommandLineO9argumentsSaySSGvgZ : $@convention(method) (@thin CommandLine.Type) -> @owned Array<String>

// Array.count.getter
sil [serialized] @$sSa5countSivg : $@convention(method) <0x10fa11ba80_0> (@guaranteed Array<0x10fa11ba80_0>) -> Int

// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] [serialized] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  %3 = tuple_extract %2 : $(Builtin.Int64, Builtin.Int1), 0 // user: %4
  %4 = struct $Int (%3 : $Builtin.Int64)          // user: %5
  return %4 : $Int                                // id: %5
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'

// static BinaryInteger.!= infix(_:_:)
sil public_external [transparent] [serialized] @$sSzsE2neoiySbx_xtFZ : $@convention(method) <Self where Self : BinaryInteger> (@in_guaranteed Self, @in_guaranteed Self, @thick Self.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Self, %1 : $*Self, %2 : $@thick Self.Type):
  %3 = metatype $@thick Self.Type                 // user: %5
  %4 = witness_method $Self, #Equatable."==" : <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Equatable) <0x10fa11ba80_0 where 0x10fa11ba80_0 : Equatable> (@in_guaranteed 0x10fa11ba80_0, @in_guaranteed 0x10fa11ba80_0, @thick 0x10fa11ba80_0.Type) -> Bool // user: %5
  %5 = apply %4<Self>(%0, %1, %3) : $@convention(witness_method: Equatable) <0x10fa11ba80_0 where 0x10fa11ba80_0 : Equatable> (@in_guaranteed 0x10fa11ba80_0, @in_guaranteed 0x10fa11ba80_0, @thick 0x10fa11ba80_0.Type) -> Bool // user: %6
  %6 = struct_extract %5 : $Bool, #Bool._value    // user: %8
  %7 = integer_literal $Builtin.Int1, -1          // user: %8
  %8 = builtin "xor_Int1"(%6 : $Builtin.Int1, %7 : $Builtin.Int1) : $Builtin.Int1 // user: %9
  %9 = struct $Bool (%8 : $Builtin.Int1)          // user: %10
  return %9 : $Bool                               // id: %10
} // end sil function '$sSzsE2neoiySbx_xtFZ'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <0x10fa11ba80_0> (Builtin.Word) -> (@owned Array<0x10fa11ba80_0>, Builtin.RawPointer)

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// _finalizeUninitializedArray<A>(_:)
sil shared_external [serialized] [readnone] [_semantics "array.finalize_intrinsic"] @$ss27_finalizeUninitializedArrayySayxGABnlF : $@convention(thin) <Element> (@owned Array<Element>) -> @owned Array<Element> {
// %0                                             // user: %2
bb0(%0 : $Array<Element>):
  %1 = alloc_stack $Array<Element>                // users: %6, %5, %4, %2
  store %0 to %1 : $*Array<Element>               // id: %2
  // function_ref Array._endMutation()
  %3 = function_ref @$sSa12_endMutationyyF : $@convention(method) <0x10fa11ba80_0> (@inout Array<0x10fa11ba80_0>) -> () // user: %4
  %4 = apply %3<Element>(%1) : $@convention(method) <0x10fa11ba80_0> (@inout Array<0x10fa11ba80_0>) -> ()
  %5 = load %1 : $*Array<Element>                 // user: %7
  dealloc_stack %1 : $*Array<Element>             // id: %6
  return %5 : $Array<Element>                     // id: %7
} // end sil function '$ss27_finalizeUninitializedArrayySayxGABnlF'

// default argument 1 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 " "                    // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA0_'

// default argument 2 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 "\n"                   // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA1_'

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// Array.subscript.getter
sil [serialized] @$sSayxSicig : $@convention(method) <0x10fa11ba80_0> (Int, @guaranteed Array<0x10fa11ba80_0>) -> @out 0x10fa11ba80_0

// FixedWidthInteger.init(_:)
sil [serialized] [always_inline] [_semantics "optimize.sil.specialize.generic.partial.never"] @$ss17FixedWidthIntegerPsEyxSgSScfC : $@convention(method) <0x10fa11ba80_0 where 0x10fa11ba80_0 : FixedWidthInteger> (@owned String, @thick 0x10fa11ba80_0.Type) -> @out Optional<0x10fa11ba80_0>

// _diagnoseUnexpectedNilOptional(_filenameStart:_filenameLength:_filenameIsASCII:_line:_isImplicitUnwrap:)
sil public_external [transparent] [serialized] @$ss30_diagnoseUnexpectedNilOptional14_filenameStart01_E6Length01_E7IsASCII5_line17_isImplicitUnwrapyBp_BwBi1_BwBi1_tF : $@convention(thin) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, Builtin.Word, Builtin.Int1) -> () {
// %0                                             // users: %46, %13
// %1                                             // users: %53, %20
// %2                                             // users: %47, %14
// %3                                             // users: %54, %21
// %4                                             // user: %5
bb0(%0 : $Builtin.RawPointer, %1 : $Builtin.Word, %2 : $Builtin.Int1, %3 : $Builtin.Word, %4 : $Builtin.Int1):
  cond_br %4, bb13, bb1                           // id: %5

bb1:                                              // Preds: bb0
  %6 = string_literal utf8 "Unexpectedly found nil while unwrapping an Optional value" // user: %8
  %7 = integer_literal $Builtin.Word, 57          // user: %12
  %8 = builtin "ptrtoint_Word"(%6 : $Builtin.RawPointer) : $Builtin.Word // user: %12
  br bb2                                          // id: %9

bb2:                                              // Preds: bb1
  %10 = integer_literal $Builtin.Int8, 2          // user: %12
  br bb3                                          // id: %11

bb3:                                              // Preds: bb2
  %12 = struct $StaticString (%8 : $Builtin.Word, %7 : $Builtin.Word, %10 : $Builtin.Int8) // user: %37
  %13 = builtin "ptrtoint_Word"(%0 : $Builtin.RawPointer) : $Builtin.Word // user: %20
  cond_br %2, bb5, bb4                            // id: %14

bb4:                                              // Preds: bb3
  %15 = integer_literal $Builtin.Int8, 0          // user: %16
  br bb6(%15 : $Builtin.Int8)                     // id: %16

bb5:                                              // Preds: bb3
  %17 = integer_literal $Builtin.Int8, 2          // user: %18
  br bb6(%17 : $Builtin.Int8)                     // id: %18

// %19                                            // user: %20
bb6(%19 : $Builtin.Int8):                         // Preds: bb5 bb4
  %20 = struct $StaticString (%13 : $Builtin.Word, %1 : $Builtin.Word, %19 : $Builtin.Int8) // user: %37
  %21 = builtin "zextOrBitCast_Word_Int64"(%3 : $Builtin.Word) : $Builtin.Int64 // user: %22
  %22 = struct $UInt (%21 : $Builtin.Int64)       // user: %37
  br bb7                                          // id: %23

bb7:                                              // Preds: bb6
  br bb8                                          // id: %24

bb8:                                              // Preds: bb7
  %25 = string_literal utf8 "Fatal error"         // user: %27
  %26 = integer_literal $Builtin.Word, 11         // user: %31
  %27 = builtin "ptrtoint_Word"(%25 : $Builtin.RawPointer) : $Builtin.Word // user: %31
  br bb9                                          // id: %28

bb9:                                              // Preds: bb8
  %29 = integer_literal $Builtin.Int8, 2          // user: %31
  br bb10                                         // id: %30

bb10:                                             // Preds: bb9
  %31 = struct $StaticString (%27 : $Builtin.Word, %26 : $Builtin.Word, %29 : $Builtin.Int8) // user: %37
  br bb11                                         // id: %32

bb11:                                             // Preds: bb10
  %33 = integer_literal $Builtin.Int32, 1         // user: %34
  %34 = struct $UInt32 (%33 : $Builtin.Int32)     // user: %37
  br bb12                                         // id: %35

bb12:                                             // Preds: bb11
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %36 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %37
  %37 = apply %36(%31, %12, %20, %22, %34) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %38

bb13:                                             // Preds: bb0
  %39 = string_literal utf8 "Unexpectedly found nil while implicitly unwrapping an Optional value" // user: %41
  %40 = integer_literal $Builtin.Word, 68         // user: %45
  %41 = builtin "ptrtoint_Word"(%39 : $Builtin.RawPointer) : $Builtin.Word // user: %45
  br bb14                                         // id: %42

bb14:                                             // Preds: bb13
  %43 = integer_literal $Builtin.Int8, 2          // user: %45
  br bb15                                         // id: %44

bb15:                                             // Preds: bb14
  %45 = struct $StaticString (%41 : $Builtin.Word, %40 : $Builtin.Word, %43 : $Builtin.Int8) // user: %70
  %46 = builtin "ptrtoint_Word"(%0 : $Builtin.RawPointer) : $Builtin.Word // user: %53
  cond_br %2, bb17, bb16                          // id: %47

bb16:                                             // Preds: bb15
  %48 = integer_literal $Builtin.Int8, 0          // user: %49
  br bb18(%48 : $Builtin.Int8)                    // id: %49

bb17:                                             // Preds: bb15
  %50 = integer_literal $Builtin.Int8, 2          // user: %51
  br bb18(%50 : $Builtin.Int8)                    // id: %51

// %52                                            // user: %53
bb18(%52 : $Builtin.Int8):                        // Preds: bb17 bb16
  %53 = struct $StaticString (%46 : $Builtin.Word, %1 : $Builtin.Word, %52 : $Builtin.Int8) // user: %70
  %54 = builtin "zextOrBitCast_Word_Int64"(%3 : $Builtin.Word) : $Builtin.Int64 // user: %55
  %55 = struct $UInt (%54 : $Builtin.Int64)       // user: %70
  br bb19                                         // id: %56

bb19:                                             // Preds: bb18
  br bb20                                         // id: %57

bb20:                                             // Preds: bb19
  %58 = string_literal utf8 "Fatal error"         // user: %60
  %59 = integer_literal $Builtin.Word, 11         // user: %64
  %60 = builtin "ptrtoint_Word"(%58 : $Builtin.RawPointer) : $Builtin.Word // user: %64
  br bb21                                         // id: %61

bb21:                                             // Preds: bb20
  %62 = integer_literal $Builtin.Int8, 2          // user: %64
  br bb22                                         // id: %63

bb22:                                             // Preds: bb21
  %64 = struct $StaticString (%60 : $Builtin.Word, %59 : $Builtin.Word, %62 : $Builtin.Int8) // user: %70
  br bb23                                         // id: %65

bb23:                                             // Preds: bb22
  %66 = integer_literal $Builtin.Int32, 1         // user: %67
  %67 = struct $UInt32 (%66 : $Builtin.Int32)     // user: %70
  br bb24                                         // id: %68

bb24:                                             // Preds: bb23
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %69 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %70
  %70 = apply %69(%64, %45, %53, %55, %67) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %71
} // end sil function '$ss30_diagnoseUnexpectedNilOptional14_filenameStart01_E6Length01_E7IsASCII5_line17_isImplicitUnwrapyBp_BwBi1_BwBi1_tF'

// ~= infix<A>(_:_:)
sil public_external [transparent] [serialized] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <T where T : Equatable> (@in_guaranteed T, @in_guaranteed T) -> Bool {
// %0                                             // user: %4
// %1                                             // user: %4
bb0(%0 : $*T, %1 : $*T):
  %2 = metatype $@thick T.Type                    // user: %4
  %3 = witness_method $T, #Equatable."==" : <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Equatable) <0x10fa11ba80_0 where 0x10fa11ba80_0 : Equatable> (@in_guaranteed 0x10fa11ba80_0, @in_guaranteed 0x10fa11ba80_0, @thick 0x10fa11ba80_0.Type) -> Bool // user: %4
  %4 = apply %3<T>(%0, %1, %2) : $@convention(witness_method: Equatable) <0x10fa11ba80_0 where 0x10fa11ba80_0 : Equatable> (@in_guaranteed 0x10fa11ba80_0, @in_guaranteed 0x10fa11ba80_0, @thick 0x10fa11ba80_0.Type) -> Bool // user: %5
  return %4 : $Bool                               // id: %5
} // end sil function '$ss2teoiySbx_xtSQRzlF'

// static Int.+ infix(_:_:)
sil public_external [transparent] [serialized] @$sSi1poiyS2i_SitFZ : $@convention(method) (Int, Int, @thin Int.Type) -> Int {
// %0                                             // user: %3
// %1                                             // user: %4
bb0(%0 : $Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_extract %0 : $Int, #Int._value      // user: %6
  %4 = struct_extract %1 : $Int, #Int._value      // user: %6
  %5 = integer_literal $Builtin.Int1, -1          // user: %6
  %6 = builtin "sadd_with_overflow_Int64"(%3 : $Builtin.Int64, %4 : $Builtin.Int64, %5 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %8, %7
  %7 = tuple_extract %6 : $(Builtin.Int64, Builtin.Int1), 0 // user: %12
  %8 = tuple_extract %6 : $(Builtin.Int64, Builtin.Int1), 1 // user: %11
  br bb1                                          // id: %9

bb1:                                              // Preds: bb0
  br bb2                                          // id: %10

bb2:                                              // Preds: bb1
  cond_fail %8 : $Builtin.Int1, "arithmetic overflow" // id: %11
  %12 = struct $Int (%7 : $Builtin.Int64)         // user: %13
  return %12 : $Int                               // id: %13
} // end sil function '$sSi1poiyS2i_SitFZ'

// static Int.- infix(_:_:)
sil public_external [transparent] [serialized] @$sSi1soiyS2i_SitFZ : $@convention(method) (Int, Int, @thin Int.Type) -> Int {
// %0                                             // user: %3
// %1                                             // user: %4
bb0(%0 : $Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_extract %0 : $Int, #Int._value      // user: %6
  %4 = struct_extract %1 : $Int, #Int._value      // user: %6
  %5 = integer_literal $Builtin.Int1, -1          // user: %6
  %6 = builtin "ssub_with_overflow_Int64"(%3 : $Builtin.Int64, %4 : $Builtin.Int64, %5 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %8, %7
  %7 = tuple_extract %6 : $(Builtin.Int64, Builtin.Int1), 0 // user: %12
  %8 = tuple_extract %6 : $(Builtin.Int64, Builtin.Int1), 1 // user: %11
  br bb1                                          // id: %9

bb1:                                              // Preds: bb0
  br bb2                                          // id: %10

bb2:                                              // Preds: bb1
  cond_fail %8 : $Builtin.Int1, "arithmetic overflow" // id: %11
  %12 = struct $Int (%7 : $Builtin.Int64)         // user: %13
  return %12 : $Int                               // id: %13
} // end sil function '$sSi1soiyS2i_SitFZ'

// static Int.* infix(_:_:)
sil public_external [transparent] [serialized] @$sSi1moiyS2i_SitFZ : $@convention(method) (Int, Int, @thin Int.Type) -> Int {
// %0                                             // user: %3
// %1                                             // user: %4
bb0(%0 : $Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_extract %0 : $Int, #Int._value      // user: %6
  %4 = struct_extract %1 : $Int, #Int._value      // user: %6
  %5 = integer_literal $Builtin.Int1, -1          // user: %6
  %6 = builtin "smul_with_overflow_Int64"(%3 : $Builtin.Int64, %4 : $Builtin.Int64, %5 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %8, %7
  %7 = tuple_extract %6 : $(Builtin.Int64, Builtin.Int1), 0 // user: %12
  %8 = tuple_extract %6 : $(Builtin.Int64, Builtin.Int1), 1 // user: %11
  br bb1                                          // id: %9

bb1:                                              // Preds: bb0
  br bb2                                          // id: %10

bb2:                                              // Preds: bb1
  cond_fail %8 : $Builtin.Int1, "arithmetic overflow" // id: %11
  %12 = struct $Int (%7 : $Builtin.Int64)         // user: %13
  return %12 : $Int                               // id: %13
} // end sil function '$sSi1moiyS2i_SitFZ'

// static Int.== infix(_:_:)
sil public_external [transparent] [serialized] @$sSi2eeoiySbSi_SitFZ : $@convention(method) (Int, Int, @thin Int.Type) -> Bool {
// %0                                             // user: %3
// %1                                             // user: %4
bb0(%0 : $Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_extract %0 : $Int, #Int._value      // user: %5
  %4 = struct_extract %1 : $Int, #Int._value      // user: %5
  %5 = builtin "cmp_eq_Int64"(%3 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1 // user: %6
  %6 = struct $Bool (%5 : $Builtin.Int1)          // user: %7
  return %6 : $Bool                               // id: %7
} // end sil function '$sSi2eeoiySbSi_SitFZ'

// static Int./ infix(_:_:)
sil public_external [transparent] [serialized] @$sSi1doiyS2i_SitFZ : $@convention(method) (Int, Int, @thin Int.Type) -> Int {
// %0                                             // users: %11, %3
// %1                                             // users: %24, %17, %5
bb0(%0 : $Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_extract %0 : $Int, #Int._value      // user: %25
  %4 = integer_literal $Builtin.Int64, 0          // user: %6
  %5 = struct_extract %1 : $Int, #Int._value      // user: %6
  %6 = builtin "cmp_eq_Int64"(%5 : $Builtin.Int64, %4 : $Builtin.Int64) : $Builtin.Int1 // user: %8
  %7 = integer_literal $Builtin.Int1, 0           // user: %8
  %8 = builtin "int_expect_Int1"(%6 : $Builtin.Int1, %7 : $Builtin.Int1) : $Builtin.Int1 // user: %9
  cond_br %8, bb19, bb1                           // id: %9

bb1:                                              // Preds: bb0
  %10 = integer_literal $Builtin.Int64, -9223372036854775808 // user: %12
  %11 = struct_extract %0 : $Int, #Int._value     // user: %12
  %12 = builtin "cmp_eq_Int64"(%11 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1 // user: %13
  cond_br %12, bb3, bb2                           // id: %13

bb2:                                              // Preds: bb1
  %14 = integer_literal $Builtin.Int1, 0          // user: %15
  br bb4(%14 : $Builtin.Int1)                     // id: %15

bb3:                                              // Preds: bb1
  %16 = integer_literal $Builtin.Int64, -1        // user: %18
  %17 = struct_extract %1 : $Int, #Int._value     // user: %18
  %18 = builtin "cmp_eq_Int64"(%17 : $Builtin.Int64, %16 : $Builtin.Int64) : $Builtin.Int1 // user: %19
  br bb4(%18 : $Builtin.Int1)                     // id: %19

// %20                                            // user: %22
bb4(%20 : $Builtin.Int1):                         // Preds: bb3 bb2
  %21 = integer_literal $Builtin.Int1, 0          // user: %22
  %22 = builtin "int_expect_Int1"(%20 : $Builtin.Int1, %21 : $Builtin.Int1) : $Builtin.Int1 // user: %23
  cond_br %22, bb8, bb5                           // id: %23

bb5:                                              // Preds: bb4
  %24 = struct_extract %1 : $Int, #Int._value     // user: %25
  %25 = builtin "sdiv_Int64"(%3 : $Builtin.Int64, %24 : $Builtin.Int64) : $Builtin.Int64 // user: %28
  br bb6                                          // id: %26

bb6:                                              // Preds: bb5
  br bb7                                          // id: %27

bb7:                                              // Preds: bb6
  %28 = struct $Int (%25 : $Builtin.Int64)        // user: %29
  return %28 : $Int                               // id: %29

bb8:                                              // Preds: bb4
  %30 = string_literal utf8 "Division results in an overflow" // user: %32
  %31 = integer_literal $Builtin.Word, 31         // user: %36
  %32 = builtin "ptrtoint_Word"(%30 : $Builtin.RawPointer) : $Builtin.Word // user: %36
  br bb9                                          // id: %33

bb9:                                              // Preds: bb8
  %34 = integer_literal $Builtin.Int8, 2          // user: %36
  br bb10                                         // id: %35

bb10:                                             // Preds: bb9
  %36 = struct $StaticString (%32 : $Builtin.Word, %31 : $Builtin.Word, %34 : $Builtin.Int8) // user: %60
  %37 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface" // user: %39
  %38 = integer_literal $Builtin.Word, 39         // user: %43
  %39 = builtin "ptrtoint_Word"(%37 : $Builtin.RawPointer) : $Builtin.Word // user: %43
  br bb11                                         // id: %40

bb11:                                             // Preds: bb10
  %41 = integer_literal $Builtin.Int8, 2          // user: %43
  br bb12                                         // id: %42

bb12:                                             // Preds: bb11
  %43 = struct $StaticString (%39 : $Builtin.Word, %38 : $Builtin.Word, %41 : $Builtin.Int8) // user: %60
  %44 = integer_literal $Builtin.Int64, 31718     // user: %45
  %45 = struct $UInt (%44 : $Builtin.Int64)       // user: %60
  br bb13                                         // id: %46

bb13:                                             // Preds: bb12
  br bb14                                         // id: %47

bb14:                                             // Preds: bb13
  %48 = string_literal utf8 "Fatal error"         // user: %50
  %49 = integer_literal $Builtin.Word, 11         // user: %54
  %50 = builtin "ptrtoint_Word"(%48 : $Builtin.RawPointer) : $Builtin.Word // user: %54
  br bb15                                         // id: %51

bb15:                                             // Preds: bb14
  %52 = integer_literal $Builtin.Int8, 2          // user: %54
  br bb16                                         // id: %53

bb16:                                             // Preds: bb15
  %54 = struct $StaticString (%50 : $Builtin.Word, %49 : $Builtin.Word, %52 : $Builtin.Int8) // user: %60
  br bb17                                         // id: %55

bb17:                                             // Preds: bb16
  %56 = integer_literal $Builtin.Int32, 1         // user: %57
  %57 = struct $UInt32 (%56 : $Builtin.Int32)     // user: %60
  br bb18                                         // id: %58

bb18:                                             // Preds: bb17
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %59 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %60
  %60 = apply %59(%54, %36, %43, %45, %57) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %61

bb19:                                             // Preds: bb0
  %62 = string_literal utf8 "Division by zero"    // user: %64
  %63 = integer_literal $Builtin.Word, 16         // user: %68
  %64 = builtin "ptrtoint_Word"(%62 : $Builtin.RawPointer) : $Builtin.Word // user: %68
  br bb20                                         // id: %65

bb20:                                             // Preds: bb19
  %66 = integer_literal $Builtin.Int8, 2          // user: %68
  br bb21                                         // id: %67

bb21:                                             // Preds: bb20
  %68 = struct $StaticString (%64 : $Builtin.Word, %63 : $Builtin.Word, %66 : $Builtin.Int8) // user: %92
  %69 = string_literal utf8 "Swift/x86_64-apple-macos.swiftinterface" // user: %71
  %70 = integer_literal $Builtin.Word, 39         // user: %75
  %71 = builtin "ptrtoint_Word"(%69 : $Builtin.RawPointer) : $Builtin.Word // user: %75
  br bb22                                         // id: %72

bb22:                                             // Preds: bb21
  %73 = integer_literal $Builtin.Int8, 2          // user: %75
  br bb23                                         // id: %74

bb23:                                             // Preds: bb22
  %75 = struct $StaticString (%71 : $Builtin.Word, %70 : $Builtin.Word, %73 : $Builtin.Int8) // user: %92
  %76 = integer_literal $Builtin.Int64, 31711     // user: %77
  %77 = struct $UInt (%76 : $Builtin.Int64)       // user: %92
  br bb24                                         // id: %78

bb24:                                             // Preds: bb23
  br bb25                                         // id: %79

bb25:                                             // Preds: bb24
  %80 = string_literal utf8 "Fatal error"         // user: %82
  %81 = integer_literal $Builtin.Word, 11         // user: %86
  %82 = builtin "ptrtoint_Word"(%80 : $Builtin.RawPointer) : $Builtin.Word // user: %86
  br bb26                                         // id: %83

bb26:                                             // Preds: bb25
  %84 = integer_literal $Builtin.Int8, 2          // user: %86
  br bb27                                         // id: %85

bb27:                                             // Preds: bb26
  %86 = struct $StaticString (%82 : $Builtin.Word, %81 : $Builtin.Word, %84 : $Builtin.Int8) // user: %92
  br bb28                                         // id: %87

bb28:                                             // Preds: bb27
  %88 = integer_literal $Builtin.Int32, 1         // user: %89
  %89 = struct $UInt32 (%88 : $Builtin.Int32)     // user: %92
  br bb29                                         // id: %90

bb29:                                             // Preds: bb28
  // function_ref _assertionFailure(_:_:file:line:flags:)
  %91 = function_ref @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never // user: %92
  %92 = apply %91(%86, %68, %75, %77, %89) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never
  unreachable                                     // id: %93
} // end sil function '$sSi1doiyS2i_SitFZ'

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil [serialized] @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// DefaultStringInterpolation.appendLiteral(_:)
sil [serialized] @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <0x10fa11ba80_0 where 0x10fa11ba80_0 : CustomStringConvertible, 0x10fa11ba80_0 : TextOutputStreamable> (@in_guaranteed 0x10fa11ba80_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// _assertionFailure(_:_:file:line:flags:)
sil [noinline] [_semantics "programtermination_point"] @$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never

// protocol witness for static Equatable.== infix(_:_:) in conformance String
sil shared_external [transparent] [serialized] [thunk] [always_inline] @$sSSSQsSQ2eeoiySbx_xtFZTW : $@convention(witness_method: Equatable) (@in_guaranteed String, @in_guaranteed String, @thick String.Type) -> Bool {
// %0                                             // user: %3
// %1                                             // user: %4
bb0(%0 : $*String, %1 : $*String, %2 : $@thick String.Type):
  %3 = load %0 : $*String                         // user: %7
  %4 = load %1 : $*String                         // user: %7
  %5 = metatype $@thin String.Type                // user: %7
  // function_ref static String.== infix(_:_:)
  %6 = function_ref @$sSS2eeoiySbSS_SStFZ : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %7
  %7 = apply %6(%3, %4, %5) : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool // user: %8
  return %7 : $Bool                               // id: %8
} // end sil function '$sSSSQsSQ2eeoiySbx_xtFZTW'

// static String.== infix(_:_:)
sil [serialized] [always_inline] [readonly] [_semantics "string.equals"] @$sSS2eeoiySbSS_SStFZ : $@convention(method) (@guaranteed String, @guaranteed String, @thin String.Type) -> Bool

// protocol witness for static Equatable.== infix(_:_:) in conformance Int
sil shared_external [transparent] [serialized] [thunk] @$sSiSQsSQ2eeoiySbx_xtFZTW : $@convention(witness_method: Equatable) (@in_guaranteed Int, @in_guaranteed Int, @thick Int.Type) -> Bool {
// %0                                             // user: %3
// %1                                             // user: %5
bb0(%0 : $*Int, %1 : $*Int, %2 : $@thick Int.Type):
  %3 = struct_element_addr %0 : $*Int, #Int._value // user: %4
  %4 = load %3 : $*Builtin.Int64                  // user: %7
  %5 = struct_element_addr %1 : $*Int, #Int._value // user: %6
  %6 = load %5 : $*Builtin.Int64                  // user: %7
  %7 = builtin "cmp_eq_Int64"(%4 : $Builtin.Int64, %6 : $Builtin.Int64) : $Builtin.Int1 // user: %8
  %8 = struct $Bool (%7 : $Builtin.Int1)          // user: %11
  br bb1                                          // id: %9

bb1:                                              // Preds: bb0
  br bb2                                          // id: %10

bb2:                                              // Preds: bb1
  return %8 : $Bool                               // id: %11
} // end sil function '$sSiSQsSQ2eeoiySbx_xtFZTW'

// Array._endMutation()
sil shared_external [serialized] [_semantics "array.end_mutation"] @$sSa12_endMutationyyF : $@convention(method) <Element> (@inout Array<Element>) -> () {
// %0                                             // users: %9, %1
bb0(%0 : $*Array<Element>):
  %1 = struct_element_addr %0 : $*Array<Element>, #Array._buffer // user: %2
  %2 = struct_element_addr %1 : $*_ArrayBuffer<Element>, #_ArrayBuffer._storage // user: %3
  %3 = struct_element_addr %2 : $*_BridgeStorage<__ContiguousArrayStorageBase>, #_BridgeStorage.rawValue // user: %4
  %4 = load %3 : $*Builtin.BridgeObject           // user: %5
  %5 = end_cow_mutation %4 : $Builtin.BridgeObject // user: %6
  %6 = struct $_BridgeStorage<__ContiguousArrayStorageBase> (%5 : $Builtin.BridgeObject) // user: %7
  %7 = struct $_ArrayBuffer<Element> (%6 : $_BridgeStorage<__ContiguousArrayStorageBase>) // user: %8
  %8 = struct $Array<Element> (%7 : $_ArrayBuffer<Element>) // user: %9
  store %8 to %0 : $*Array<Element>               // id: %9
  %10 = tuple ()                                  // user: %11
  return %10 : $()                                // id: %11
} // end sil function '$sSa12_endMutationyyF'

sil_witness_table public_external [serialized] String: Equatable module Swift {
  method #Equatable."==": <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : @$sSSSQsSQ2eeoiySbx_xtFZTW	// protocol witness for static Equatable.== infix(_:_:) in conformance String
}

sil_witness_table public_external [serialized] Int: Equatable module Swift {
  method #Equatable."==": <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : @$sSiSQsSQ2eeoiySbx_xtFZTW	// protocol witness for static Equatable.== infix(_:_:) in conformance Int
}



// Mappings from '#fileID' to '#filePath':
//   'main/calc.sil' => '/Users/justinfargnoli/test/calc.sil'


